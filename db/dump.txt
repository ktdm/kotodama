--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: apis; Type: TABLE; Schema: public; Owner: kotodama; Tablespace: 
--

CREATE TABLE apis (
    id integer NOT NULL,
    handlers text,
    function text,
    views text
);


ALTER TABLE public.apis OWNER TO kotodama;

--
-- Name: apis_id_seq; Type: SEQUENCE; Schema: public; Owner: kotodama
--

CREATE SEQUENCE apis_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.apis_id_seq OWNER TO kotodama;

--
-- Name: apis_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: kotodama
--

ALTER SEQUENCE apis_id_seq OWNED BY apis.id;


--
-- Name: editors; Type: TABLE; Schema: public; Owner: kotodama; Tablespace: 
--

CREATE TABLE editors (
    id integer NOT NULL,
    mtype integer,
    forms text,
    views text
);


ALTER TABLE public.editors OWNER TO kotodama;

--
-- Name: editors_id_seq; Type: SEQUENCE; Schema: public; Owner: kotodama
--

CREATE SEQUENCE editors_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.editors_id_seq OWNER TO kotodama;

--
-- Name: editors_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: kotodama
--

ALTER SEQUENCE editors_id_seq OWNED BY editors.id;


--
-- Name: frontpages; Type: TABLE; Schema: public; Owner: kotodama; Tablespace: 
--

CREATE TABLE frontpages (
    id integer NOT NULL,
    html text
);


ALTER TABLE public.frontpages OWNER TO kotodama;

--
-- Name: frontpages_id_seq; Type: SEQUENCE; Schema: public; Owner: kotodama
--

CREATE SEQUENCE frontpages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.frontpages_id_seq OWNER TO kotodama;

--
-- Name: frontpages_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: kotodama
--

ALTER SEQUENCE frontpages_id_seq OWNED BY frontpages.id;


--
-- Name: media; Type: TABLE; Schema: public; Owner: kotodama; Tablespace: 
--

CREATE TABLE media (
    id integer NOT NULL,
    title character varying(255) NOT NULL,
    url character varying(255),
    author character varying(255) DEFAULT 'kotoda.ma'::character varying,
    count integer DEFAULT 0,
    info text,
    data_id integer,
    data_type character varying(255),
    mediatype_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.media OWNER TO kotodama;

--
-- Name: media_id_seq; Type: SEQUENCE; Schema: public; Owner: kotodama
--

CREATE SEQUENCE media_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.media_id_seq OWNER TO kotodama;

--
-- Name: media_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: kotodama
--

ALTER SEQUENCE media_id_seq OWNED BY media.id;


--
-- Name: mediatypes; Type: TABLE; Schema: public; Owner: kotodama; Tablespace: 
--

CREATE TABLE mediatypes (
    id integer NOT NULL,
    arguments text,
    views text
);


ALTER TABLE public.mediatypes OWNER TO kotodama;

--
-- Name: mediatypes_id_seq; Type: SEQUENCE; Schema: public; Owner: kotodama
--

CREATE SEQUENCE mediatypes_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.mediatypes_id_seq OWNER TO kotodama;

--
-- Name: mediatypes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: kotodama
--

ALTER SEQUENCE mediatypes_id_seq OWNED BY mediatypes.id;


--
-- Name: pages; Type: TABLE; Schema: public; Owner: kotodama; Tablespace: 
--

CREATE TABLE pages (
    id integer NOT NULL,
    html text
);


ALTER TABLE public.pages OWNER TO kotodama;

--
-- Name: pages_id_seq; Type: SEQUENCE; Schema: public; Owner: kotodama
--

CREATE SEQUENCE pages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.pages_id_seq OWNER TO kotodama;

--
-- Name: pages_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: kotodama
--

ALTER SEQUENCE pages_id_seq OWNED BY pages.id;


--
-- Name: schema_migrations; Type: TABLE; Schema: public; Owner: kotodama; Tablespace: 
--

CREATE TABLE schema_migrations (
    version character varying(255) NOT NULL
);


ALTER TABLE public.schema_migrations OWNER TO kotodama;

--
-- Name: users; Type: TABLE; Schema: public; Owner: kotodama; Tablespace: 
--

CREATE TABLE users (
    id integer NOT NULL,
    handle character varying(255),
    url character varying(255),
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.users OWNER TO kotodama;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: kotodama
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_id_seq OWNER TO kotodama;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: kotodama
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: kotodama
--

ALTER TABLE ONLY apis ALTER COLUMN id SET DEFAULT nextval('apis_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: kotodama
--

ALTER TABLE ONLY editors ALTER COLUMN id SET DEFAULT nextval('editors_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: kotodama
--

ALTER TABLE ONLY frontpages ALTER COLUMN id SET DEFAULT nextval('frontpages_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: kotodama
--

ALTER TABLE ONLY media ALTER COLUMN id SET DEFAULT nextval('media_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: kotodama
--

ALTER TABLE ONLY mediatypes ALTER COLUMN id SET DEFAULT nextval('mediatypes_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: kotodama
--

ALTER TABLE ONLY pages ALTER COLUMN id SET DEFAULT nextval('pages_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: kotodama
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);


--
-- Data for Name: apis; Type: TABLE DATA; Schema: public; Owner: kotodama
--

COPY apis (id, handlers, function, views) FROM stdin;
1	--- {}\n	--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\nsignature: Text:title -> Text:mediatype -> Boolean:includeData -> Hash:result\ncode: ! "result = Media.where( :title => title, :data_type => mediatype.capitalize\n  )[0]\\r\\nresult.to_json"\n	--- !ruby/hash:ActiveSupport::HashWithIndifferentAccess\njson: <%= render :json => result %>\n
\.


--
-- Name: apis_id_seq; Type: SEQUENCE SET; Schema: public; Owner: kotodama
--

SELECT pg_catalog.setval('apis_id_seq', 2, true);


--
-- Data for Name: editors; Type: TABLE DATA; Schema: public; Owner: kotodama
--

COPY editors (id, mtype, forms, views) FROM stdin;
4	7	---\n- Code: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n    args: html\n    code: <%= data.text_area :html, :id => "code", :class => "editor_window" %>	---\n- js: eddisp.finalfunc = function (a) {<%= "\\r\\n if (a===\\"Render\\") $(\\"render\\").src\n    = window.location.href.replace(/^.*\\\\//, '/')\\r\\n".html_safe unless params[:context].nil?\n    %>}\n
3	5	---\n- Code: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n    args: html\n    code: <%= data.text_area :html, :id => "code", :class => "editor_window" %>	---\n- js: ! "eddisp.finalfunc = function (a) {\\r\\n if (a===\\"Render\\") {\\r\\n  b=$(\\"render\\").contentWindow.document;\\r\\n\n    \\ b.write($(\\"code\\").value);\\r\\n  b.close()\\r\\n }\\r\\n}"\n
2	3	---\n- Forms: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n    args: forms\n    code: ! "<div style=\\"display:table\\" class=\\"fill\\">\\r\\n <div style=\\"display:table-row\\"\n      class=\\"fill\\">\\r\\n  <div class=\\"navlist\\">\\r\\n   <div id=\\"forms_dir\\"><%=\n      render :partial => \\"d/title\\", :collection => @editor.data.forms, :locals =>\n      {:loc => \\"forms\\"} %></div\\r\\n   ><div class=\\"ins_stamp\\">Insert\\r\\n    <input\n      class=\\"help_text\\" type=\\"text\\" value=\\"Mediatype\\" size=\\"20\\" onkeypress=\\"if\n      (event.which==13) ins.call(this.parentNode.parentNode.parentNode,this.value.charAt(0).toUpperCase()+this.value.slice(1))\\"\n      />\\r\\n   </div>\\r\\n   <div id=\\"argMenu\\" class=\\"hr\\"\\r\\n    ><div id=\\"mtypeChooser\\"\\r\\n\n      \\    ><a href=\\"#\\" id=\\"mtype\\" onmousedown=\\"menu(mtypeMenuObj());return false\\"\n      onclick=\\"return false\\"></a\\r\\n    ></div\\r\\n    ><div>Args</div\\r\\n   ></div>\\r\\n\n      <%= render :partial => \\"d/args\\", :collection => @editor.data.forms %>\\r\\n\n      \\ </div>\\r\\n  <ul id=\\"forms_container\\" mediatype=\\"mediatype\\" class=\\"fill\\"><%=\n      render :partial => \\"d/box\\", :collection => @editor.data.forms, :locals =>\n      {:loc => \\"forms\\"} %></ul>\\r\\n </div>\\r\\n <input type=\\"hidden\\" name=\\"editor[forms][]\\"\n      />\\r\\n <input type=\\"text\\" id=\\"mtypeInputStamp\\" class=\\"hide help_text\\"\n      value=\\"Mediatype\\" onfocus=\\"inputFocus('mtypeInput','Mediatype')\\" onblur=\\"inputBlur('mtypeInput','Mediatype')\\"\n      onkeypress=\\"if(event.which===13){this.nextSibling.style.display='block';this.parentNode.removeChild(this)}\\"/>\\r\\n\n      <%= render :partial => \\"d/title\\", :locals => {:loc => \\"forms\\"} %>\\r\\n <%=\n      render :partial => \\"d/box\\", :locals => {:loc => \\"forms\\"} %>\\r\\n <%= render\n      :partial => \\"d/args\\" %>\\r\\n</div>"\n- Type: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n    args: mtype\n    code: <%= data.text_field :mtype %>\n- Views: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n    args: views\n    code: ! "<div style=\\"display:table\\" class=\\"fill\\">\\r\\n <div style=\\"display:table-row\\"\n      class=\\"fill\\">\\r\\n  <div class=\\"navlist\\" id=\\"views_dir\\"><%= render :partial\n      => \\"d/title\\", :collection => @editor.data.views, :locals => {:loc => \\"views\\"}\n      %></div\\r\\n  ><div class=\\"ins_stamp\\">Instance of\\r\\n   <input class=\\"help_text\\"\n      type=\\"text\\" size=\\"20\\" onkeypress=\\"if (event.which==13) ins.call(this.parentNode.parentNode,this.value)\\"\n      />\\r\\n  </div>\\r\\n  <ul id=\\"views_container\\" mediatype=\\"mediatype\\" class=\\"fill\\"><%=\n      render :partial => \\"d/box\\", :collection => @editor.data.views, :locals =>\n      {:loc => \\"views\\"} %></ul>\\r\\n </div>\\r\\n <input type=\\"hidden\\" name=\\"editor[views][]\\"\n      />\\r\\n <%= render :partial => \\"d/box\\", :locals => {:loc => \\"views\\"} %>\\r\\n\n      <%= render :partial => \\"d/title\\", :locals => {:loc => \\"views\\"} %>\\r\\n</div>"\n	---\n- js: ! "eddisp.finalfunc=function(a){<%= \\"if (a===\\\\\\"Render\\\\\\") $(\\\\\\"render\\\\\\").src\n    = window.location.href.replace(/^.*\\\\\\\\//, '/')\\".html_safe unless params[:context].nil?\n    %>}\\r\\n\\r\\nvar editorArgs=<%=\\r\\n ActiveSupport::JSON.encode(@editor.data.mtype.nil?\n    ?\\r\\n  {\\"editor\\" => nil, \\"args\\" => nil} :\\r\\n  {\\"editor\\" => (a = Media.find(@editor.data.mtype)).title,\n    \\"args\\" => a.data.arguments.inject(:merge)}\\r\\n ).html_safe\\r\\n%>,\\r\\nlists={\\r\\n\n    forms_container: {\\r\\n  insfunc: function() {\\r\\n   var d,i,n=0,r;\\r\\n   for (i=0;i<this.actions.length;i++)\n    {\\r\\n    d=this.actions[i].firstChild.id;\\r\\n    n=Math.max(n,parseFloat(d.slice(d.indexOf(\\"_\\")+1)))\n    //avoid collisions\\r\\n   }\\r\\n   n++;\\r\\n   this.target.appendChild($(\\"form_stamp\\").cloneNode(true)).setAttribute(\\"id\\",r=\\"form_\\"+n);\\r\\n\n    \\  this.target.appendChild($(\\"form_stamp\\").nextSibling.cloneNode(true)).setAttribute(\\"id\\",\\"form_result_\\"+n);\\r\\n\n    \\  $(\\"forms_dir\\").appendChild($(\\"form_title_stamp\\").cloneNode(true)).setAttribute(\\"id\\",s=\\"form_title_\\"+n);\\r\\n\n    \\  $(s).firstChild.innerHTML=$(s).childNodes[1].innerHTML=this.insname;\\r\\n   $(r).name=\\"editor[forms][][\\"\n    + this.insname + \\"][code]\\";\\r\\n   $(\\"forms_dir\\").parentNode.appendChild($(\\"form_args_stamp\\").firstChild.cloneNode(true)).setAttribute(\\"id\\",t=\\"form_arguments_\\"+n);\\r\\n\n    \\  $(\\"forms_dir\\").parentNode.appendChild($(\\"form_args_stamp\\").lastChild.cloneNode(true)).firstChild.id=\\"arg_opts_\\"+n;\\r\\n\n    \\  $(r).parentNode.className=\\"fill\\";\\r\\n   form_arg_list(n);\\r\\n   this.selfunc($(s))\\r\\n\n    \\ },\\r\\n  selfunc: function(a) {\\r\\n   for (var b=e=0,c=$(\\"forms_dir\\").childNodes;b<c.length;b++)\n    {\\r\\n    if (c[b].nodeType==3) continue;\\r\\n    e++;\\r\\n    d=(c[b]==a ? 0 : 1);\\r\\n\n    \\   c[b].childNodes[d].style.display=\\"none\\";\\r\\n    c[b].childNodes[1-d].style.display=\\"inline\\";\\r\\n\n    \\   if ($(\\"form_\\"+e)) $(\\"form_\\"+e).parentNode.style.display=(d?\\"none\\":\\"inline\\");\\r\\n\n    \\   if (f=$(\\"form_arguments_\\"+e)) {\\r\\n     f.style.display=(d?\\"none\\":\\"inline\\");\\r\\n\n    \\    if (f.firstChild&&f.lastChild.tagName.toLowerCase()==\\"div\\") f.removeChild(f.lastChild)\\r\\n\n    \\   }\\r\\n   }\\r\\n  },\\r\\n  insloc: function () {return $(\\"forms_dir\\")},\\r\\n\n    \\ finalfunc: function(a) {\\r\\n   if (!$(\\"form_\\"+a)) {\\r\\n    $(\\"forms_dir\\").removeChild($(\\"form_title_\\"+a));\\r\\n\n    \\   $(\\"forms_dir\\").parentNode.removeChild($(\\"form_arguments_\\"+a).nextSibling);\\r\\n\n    \\   $(\\"forms_dir\\").parentNode.removeChild($(\\"form_arguments_\\"+a));\\r\\n    for\n    (var c=1;$(\\"form_\\"+(a+c));c++) {\\r\\n     $(\\"form_\\"+(a+c)).id = \\"form_\\" +\n    (a+c-1);\\r\\n     $(\\"form_title_\\"+(a+c)).id = \\"form_title_\\" + (a+c-1);\\r\\n\n    \\    $(\\"form_arguments_\\"+(a+c)).id = \\"form_arguments_\\" + (a+c-1);\\r\\n    }\\r\\n\n    \\   var b=1;\\r\\n    while (!$(\\"form_\\"+a)&&b!=1000) {\\r\\n     a+=2*b*(b%2)-b;\n    //1D spiral search (for del)\\r\\n     b++\\r\\n    }\\r\\n    lists[\\"form_arguments_\\"+(a+c)]=null;\\r\\n\n    \\   this.selfunc($(\\"form_title_\\"+a))\\r\\n   }\\r\\n  }\\r\\n },\\r\\n views_container:\n    {\\r\\n  insfunc: function(){\\r\\n   var d,i,n=0;\\r\\n   for (i=0;i<this.actions.length;i++)\n    {\\r\\n    d=this.actions[i].firstChild.id;\\r\\n    n=Math.max(n,parseFloat(d.slice(d.indexOf(\\"_\\")+1)))\n    //avoid collisions\\r\\n   }\\r\\n   n++;\\r\\n   this.target.appendChild($(\\"view_stamp\\").cloneNode(true)).setAttribute(\\"id\\",\\"view_\\"+n);\\r\\n\n    \\  $(\\"views_dir\\").appendChild($(\\"view_title_stamp\\").cloneNode(true)).setAttribute(\\"id\\",\n    \\"view_title_\\"+n);\\r\\n   $(\\"view_title_\\"+n).firstChild.innerHTML=$(\\"view_title_\\"+n).childNodes[1].innerHTML=this.insname;\\r\\n\n    \\  $(\\"view_\\"+n).name=\\"editor[views][][\\"+this.insname+\\"]\\";\\r\\n   $(\\"view_\\"+n).parentNode.className=\\"fill\\";\\r\\n\n    \\  this.selfunc($(\\"view_title_\\"+n));\\r\\n  },\\r\\n  insloc: function () {return\n    $(\\"views_dir\\")},\\r\\n  selfunc: function(a) {\\r\\n   for (var b=e=0,c=$(\\"views_dir\\").childNodes;b<c.length;b++)\n    {\\r\\n    if (c[b].nodeType==3) continue;\\r\\n    e++;\\r\\n    d=(c[b]==a ? 0 : 1);\\r\\n\n    \\   c[b].childNodes[d].style.display=\\"none\\";\\r\\n    c[b].childNodes[1-d].style.display=\\"inline\\";\\r\\n\n    \\   if ($(\\"view_\\"+e)) $(\\"view_\\"+e).parentNode.style.display=(d?\\"none\\":\\"inline\\")\\r\\n\n    \\  }\\r\\n  },\\r\\n  finalfunc: function(a) {\\r\\n   if (!$(\\"view_\\"+a)) {\\r\\n    $(\\"views_dir\\").removeChild($(\\"view_title_\\"+a));\\r\\n\n    \\   for (var c=1;$(\\"view_\\"+(a+c));c++) {\\r\\n     $(\\"view_\\"+(a+c)).id = \\"view_\\"\n    + (a+c-1);\\r\\n     $(\\"view_title_\\"+(a+c)).id = \\"view_title_\\" + (a+c-1);\\r\\n\n    \\   }\\r\\n    var b=1;\\r\\n    while (!$(\\"view_\\"+a)&&b!=1000) {\\r\\n     a+=2*b*(b%2)-b;\n    //1D spiral search (for del)\\r\\n     b++\\r\\n    }\\r\\n    this.selfunc($(\\"view_title_\\"+a))\\r\\n\n    \\  }\\r\\n  }\\r\\n }\\r\\n},\\r\\nloadfunc = function () {\\r\\n lists.views_container.selfunc($(\\"views_dir\\").firstChild);\\r\\n\n    lists.forms_container.selfunc($(\\"forms_dir\\").firstChild);\\r\\n if (editorArgs.editor)\n    $(\\"mtypeChooser\\").firstChild.innerHTML = editorArgs.editor\\r\\n},\\r\\nmtypeMenuObj\n    = function() {\\r\\n return {\\r\\n  it:     $('mtypeChooser'),\\r\\n  list:   {\\r\\n\n    \\  Choose:   new Function('ins.call($(\\"'+targetElement()+'\\"))'),\\r\\n   Unchoose:\n    new Function('del.call($(\\"'+targetElement()+'\\"))')\\r\\n  },\\r\\n  onmenu: provoke,\\r\\n\n    \\ timer:  function() {\\r\\n   var a, b;\\r\\n   (a=$('here').parentNode).firstChild.style.display='none';\\r\\n\n    \\  b=a.insertBefore(document.createElement('a'),a.firstChild);\\r\\n   b.href='#';\\r\\n\n    \\  b.className='menuchoice';\\r\\n   b.onmouseup=function() {\\r\\n    n=$('mtypeChooser').insertBefore($('mtypeInputStamp').cloneNode(true),$('mtype'));\\r\\n\n    \\   n.id='mtypeInput';\\r\\n    n.style.width=$('forms_dir').offsetWidth-14+\\"px\\"\\r\\n\n    \\  };\\r\\n   b.innerHTML='Attach mediatype'\\r\\n  },\\r\\n  disarm: function() {\\r\\n\n    \\  var a, b;\\r\\n   if ((a=(b=$('here').parentNode).firstChild).innerHTML==='Attach\n    mediatype') {\\r\\n    b.removeChild(a);\\r\\n    b.firstChild.style.display='block'\\r\\n\n    \\  }\\r\\n  }\\r\\n }\\r\\n};\\r\\n\\r\\nfunction form_arg_list(n) {\\r\\n lists[\\"form_arguments_\\"+n]={\\r\\n\n    \\ insfunc: new Function(\\"\\\\\\r\\n   if ((z=$('form_arguments_\\"+n+\\"')).firstChild.firstChild.className=='none')\n    z.removeChild(z.firstChild);\\\\\\r\\n   a=this.target.appendChild(document.createElement('div'));\\\\\\r\\n\n    \\  a.innerHTML=this.insname\\\\\\r\\n  \\"),\\r\\n  insloc: new Function(\\"\\\\\\r\\n   if\n    (this.actions) argOpts(\\"+n+\\");\\\\\\r\\n   return $('form_arguments_\\"+n+\\"')\\\\\\r\\n\n    \\ \\"),\\r\\n  finalfunc: new Function(\\"\\\\\\r\\n   (x=$('form_arguments_\\"+n+\\"')).nextSibling.lastChild.value\n    = (function(a){\\\\\\r\\n    for (b=0,c=x.childNodes;b<c.length;b++) {\\\\\\r\\n     a.push(c[b].firstChild.firstChild.data)\\\\\\r\\n\n    \\   }\\\\\\r\\n    return a\\\\\\r\\n   })([]);\\\\\\r\\n   if (x.childNodes.length==0) {\\\\\\r\\n\n    \\   (y=document.createElement('div')).innerHTML='none';\\\\\\r\\n    y.className='none';\\\\\\r\\n\n    \\   z=x.appendChild(document.createElement('li'));\\\\\\r\\n    z.appendChild(y)\\\\\\r\\n\n    \\  }\\\\\\r\\n  \\")\\r\\n }\\r\\n}\\r\\n\\r\\nfor (var n=1;n<=<%= @editor.data.forms.length\n    %>;n++) form_arg_list(n);\\r\\n\\r\\nfunction targetElement() {\\r\\n for(a=0,b=$(\\"forms_dir\\").childNodes;a<b.length;a++)\n    {\\r\\n  if(b[a].firstChild.style.display==\\"none\\") break\\r\\n }\\r\\n return \\"form_arguments_\\"+b[a].id.split(\\"_\\")[2]\\r\\n}\\r\\n\\r\\nfunction\n    argOpts(n) {\\r\\n while ((z=$(\\"arg_opts_\\"+n)).childNodes[0]) z.removeChild(z.childNodes[0]);\\r\\n\n    for (a in editorArgs.args) {\\r\\n  var b=$(\\"arg_opts_\\"+n).appendChild(document.createElement(\\"div\\"));\\r\\n\n    \\ b.innerHTML=a;\\r\\n  for (c=1,d=[[],[]];e=$(\\"form_arguments_\\"+c);c++) {\\r\\n\n    \\  g=(c==n)?0:1;\\r\\n   for (f=0;e.childNodes[f];f++) d[g].push((h=e.childNodes[f].firstChild).firstChild?h.firstChild.data:h.data);\\r\\n\n    \\ }\\r\\n  if (d[0].indexOf(a)!=-1) {b.className=\\"hasArg\\"}\\r\\n  else if (d[1].indexOf(a)!=-1)\n    {b.className=\\"otherHasArg\\"}\\r\\n  else {\\r\\n   b.setAttribute(\\"onclick\\",\\"ins.call($('form_arguments_\\"+n+\\"'),this.firstChild.data);return\n    false\\");\\r\\n   b.className=\\"availArg\\"\\r\\n  }\\r\\n }\\r\\n}"\n- css: ! "ul * {\\r\\n margin:0px;\\r\\n outline:none\\r\\n}\\r\\nul {\\r\\n margin:0px\\r\\n}\\r\\n#view_stamp,#form_stamp,.ins_stamp\n    {\\r\\n display:none\\r\\n}\\r\\n.ins_stamp {\\r\\n margin-top: .5em\\r\\n}\\r\\n.ins_stamp\n    input {\\r\\n width: 100%;\\r\\n max-width: 20em;\\r\\n padding: 2px\\r\\n}\\r\\n.navlist\n    {\\r\\n display:table-cell;\\r\\n height:100%;\\r\\n width:15%;\\r\\n vertical-align:top;\\r\\n\n    text-align:right;\\r\\n padding-right:10px;\\r\\n margin-right:0px\\r\\n}\\r\\n.navlist>div,.navlist>ul>li\n    {\\r\\n padding:0px 5px 0px 5px\\r\\n}\\r\\n.navlist>* {\\r\\n padding:5px 0px 5px 0px\\r\\n}\\r\\n#forms_dir\n    a,#views_dir a {\\r\\n padding: 0px 3px 0px 3px\\r\\n}\\r\\n.fill {\\r\\n width:100%;\\r\\n\n    height:100%;\\r\\n margin:0px;\\r\\n padding:0px\\r\\n}\\r\\n#argMenu {\\r\\n padding-top:3px\\r\\n}\\r\\n#argMenu\n    + ul > li {\\r\\n padding-top:3px\\r\\n}\\r\\n#mtypeChooser {\\r\\n position: absolute;\\r\\n\n    left: 10px;\\r\\n margin-top: -1px;\\r\\n background-color:white;\\r\\n border: 1px\n    solid grey;\\r\\n border-radius: 4px;\\r\\n text-align: left;\\r\\n -webkit-transition:\n    background-color .5s ease-in-out; \\r\\n -moz-transition: background-color .5s ease-in-out;\n    \\r\\n -o-transition: background-color .5s ease-in-out;  \\r\\n -ms-transition: background-color\n    .5s ease-in-out;  \\r\\n transition: background-color .5s ease-in-out\\r\\n}\\r\\n#mtypeChooser:hover\n    {\\r\\n background-color:lightcyan;\\r\\n border-color:royalblue\\r\\n}\\r\\n#mtype {\\r\\n\n    padding:0px 2px 0px 2px\\r\\n}\\r\\n#mtypeInput > input {\\r\\n margin:-1px;\\r\\n padding:2px\\r\\n}\\r\\n.formArgs\n    > li > div {\\r\\n padding-right:5px\\r\\n}\\r\\n.formArgs > li:first-child > div {\\r\\n\n    padding-top:2px\\r\\n}\\r\\n.none {\\r\\n color:darkgrey\\r\\n}\\r\\n.argOpts {\\r\\n display:table;\\r\\n\n    border-collapse:collapse;\\r\\n width:100%\\r\\n}\\r\\n.argOpts > * {\\r\\n display:table-row\\r\\n}\\r\\n.hasArg\n    {\\r\\n background-color:white;\\r\\n border:1px dashed lightgrey;\\r\\n color:darkgrey\\r\\n}\\r\\n.otherHasArg\n    {\\r\\n border:1px dashed lightgrey;\\r\\n background-color:mistyrose;\\r\\n color:darkgrey\\r\\n}\\r\\n.availArg,\n    .availArg:hover {\\r\\n background-color:orange;\\r\\n border:1px double orangered\n    !important;\\r\\n cursor:pointer\\r\\n}\\r\\n.hasArg:hover, .otherHasArg:hover {\\r\\n\n    cursor:default\\r\\n}"\n- partial:title: ! "<%-\\r\\n t = (title.nil? ? \\"\\" : title.keys[0])\\r\\n title_counter||=0\\r\\n\n    n=(title_counter+1).to_s\\r\\n ls = loc.singularize\\r\\n-%><div id=\\"<%= (t == \\"\\")\n    ? \\"#{ls}_title_stamp\\" : \\"#{ls}_title_\\" + n %>\\"><%= link_to t, \\"#\\", :onmousedown\n    => \\"lists.#{loc}_container.selfunc(this.parentNode)\\" %><%= link_to t, \\"#\\",\n    :id => \\"title\\", :onmousedown => \\"if (event.which===1) stringedit(this,true);return\n    false\\", :style => \\"background-color:orange\\" %><input class=\\"hide\\" onkeypress=\\"if\n    (event.which===13) {stringedit(this,false);$('<%= ls %>_' + parseFloat(this.parentNode.id.slice(11))).name='editor[<%=\n    loc %>][]['+(t=this.previousSibling.firstChild.data)+']';this.parentNode.firstChild.firstChild.data=t}\\"\n    onblur=\\"if (this.style.display!=='none') {stringedit(this,false);$('<%= ls %>_'\n    + parseFloat(this.parentNode.id.slice(11))).name='editor[<%= loc %>][]['+(t=this.previousSibling.firstChild.data)+']';this.parentNode.firstChild.firstChild.data=t}\\"\n    /></div>"\n- partial:box: ! "<%-\\r\\n box||={}\\r\\n box_counter||=0\\r\\n n=(box_counter+1).to_s\\r\\n\n    unless box=={}\\r\\n  -%><li class=\\"fill\\"><%-\\r\\n end\\r\\n if loc == \\"views\\"\\r\\n-%><textarea\n    class='editor_window' id='<%= (box=={})?\\"view_stamp\\":\\"view_\\" + n + \\"' name='editor[views][][\\"\n    + box.keys[0] + \\"]\\" %>'><%= box.values[0] %></textarea><%-\\r\\n end\\r\\n if loc\n    == \\"forms\\"\\r\\n  -%><textarea class='editor_window' id='<%= (box=={})?\\"form_stamp\\":\\"form_\\"\n    + n + \\"' name='editor[forms][][\\" + box.keys[0] + \\"][code]\\" %>'><%= box.values[0][\\"code\\"]\n    unless box=={} %></textarea><div class=\\"editor_window\\" style=\\"display:none\\"<%=\n    (box=={})?\\"\\":\\" id='form_result_\\" + n + \\"'\\"%>></div><%-\\r\\n end\\r\\n unless\n    box=={}\\r\\n  -%></li><%-\\r\\n end\\r\\n-%>"\n- partial:args: ! "<%-\\r\\n a=if args.nil?\\r\\n  nil\\r\\n elsif args.values[0][\\"args\\"].nil?\\r\\n\n    \\ []\\r\\n else\\r\\n  args.values[0][\\"args\\"].split(\\",\\")\\r\\n end\\r\\n args_counter||=0\\r\\n\n    n=(args_counter+1).to_s\\r\\n if a.nil?\\r\\n  -%><div id=\\"form_args_stamp\\"><%-\\r\\n\n    end\\r\\n-%><ul <%= ('id=\\"form_arguments_' + n + '\\" ').html_safe unless a.nil?\n    %>class=\\"formArgs\\" mediatype=\\"mediatype\\"><%-\\r\\n if a and a!=[]\\r\\n  a.each\n    do |arg|\\r\\n   -%><%= content_tag(:li, content_tag(:div, arg)) %><%-\\r\\n  end\\r\\n\n    elsif a==[]\\r\\n  -%><li><div class=\\"none\\">none</div></li><%-\\r\\n end\\r\\n-%></ul\\r\\n><div\n    class=\\"ins_stamp\\"\\r\\n ><div id=\\"arg_opts_<%= n %>\\" class=\\"argOpts\\"></div\\r\\n\n    ><input type=\\"hidden\\" <%= ('name=\\"editor[forms][][' + args.keys[0] + '][args]\\"\n    value=\\"' + a.join(\\",\\") + '\\" ').html_safe unless a.nil? %>/></div><%-\\r\\n if\n    a.nil?\\r\\n   -%></div><%-\\r\\n end\\r\\n-%>"\n
1	1	---\n- Signature: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n    args: arguments\n    code: ! "<span style=\\"display:<%= @mediatype.data.arguments.length>1?'block':'none'\n      %>\\">Function</span>\\r\\n<ul id=\\"arguments_container\\" mediatype=\\"mediatype\\"><%=\n      render :partial => \\"b/argument\\", :collection => @mediatype.data.arguments\n      %></ul\\r\\n><div class=\\"ins_stamp\\">Instance of\\r\\n <input class=\\"help_text\\"\n      type=\\"text\\" size=\\"20\\" onkeypress=\\"if (event.which==13) ins.call(this.parentNode.parentNode,this.value.charAt(0).toUpperCase()+this.value.slice(1))\\"/>\\r\\n<input\n      type=\\"hidden\\" name=\\"mediatype[arguments][]\\" />\\r\\n</div><%= render :partial\n      => \\"b/argument\\" %>"\n- Views: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n    args: views\n    code: ! "<div style=\\"display:table\\" class=\\"fill\\">\\r\\n <div style=\\"display:table-row\\"\n      class=\\"fill\\">\\r\\n  <div class=\\"navlist\\" id=\\"views_dir\\"><%= render :partial\n      => \\"b/title\\", :collection => @mediatype.data.views %></div\\r\\n  ><div class=\\"ins_stamp\\">Instance\n      of\\r\\n   <input class=\\"help_text\\" type=\\"text\\" size=\\"50\\" onkeypress=\\"if\n      (event.which==13) ins.call(this.parentNode.parentNode,this.value)\\"/>\\r\\n  </div>\\r\\n\n      \\ <ul id=\\"views_container\\" mediatype=\\"mediatype\\" class=\\"fill\\"><%= render\n      :partial => \\"b/view\\", :collection => @mediatype.data.views %></ul>\\r\\n </div>\\r\\n\n      <input type=\\"hidden\\" name=\\"mediatype[views][]\\" />\\r\\n <%= render :partial\n      => \\"b/view\\" %>\\r\\n <%= render :partial => \\"b/title\\" %>\\r\\n</div>"\n	---\n- js: ! "eddisp.finalfunc = function(a){ //FIXME being done twice...\\r\\n<%= \\";\\\\r\\\\n\n    if (a===\\\\\\"Render\\\\\\") $(\\\\\\"render\\\\\\").src = window.location.href.replace(/^.*\\\\\\\\//,\n    '/')\\".html_safe unless params[:context].nil? %>\\r\\n};\\r\\n//eddisp.operations\n    = [[\\"arguments\\"],[\\"views\\"],[]];\\r\\nvar lists = {\\r\\n arguments_container:\n    {\\r\\n  insfunc: function(){\\r\\n   var d,i,n=0;\\r\\n   for (i=0;i<this.actions.length;i++)\n    {\\r\\n    d=this.actions[i].firstChild.id;\\r\\n    n=Math.max(n,parseFloat(d.slice(d.indexOf(\\"_\\")+1)))\n    //avoid collisions\\r\\n   }\\r\\n   n++;\\r\\n   this.target.appendChild($(\\"argument_stamp\\").cloneNode(true)).setAttribute(\\"id\\",\\"arg_\\"+n);\\r\\n\n    \\  (h=$(\\"arg_\\"+n).childNodes[1].childNodes[1]).childNodes[1].innerHTML=this.insname;\\r\\n\n    \\  h.lastChild.value=this.insname;\\r\\n   h.childNodes[3].style.display=\\"none\\";\\r\\n\n    \\  h.childNodes[4].style.display=\\"inline\\";\\r\\n   h.childNodes[4].focus();\\r\\n\n    \\  $(\\"arg_\\"+n).getElementsByClassName(\\"view\\")[0].onmousedown=viewlinks\\r\\n\n    \\ },\\r\\n  insloc: function () {return $(\\"arguments_container\\")},\\r\\n  finalfunc:\n    arity_display\\r\\n },\\r\\n views_container: {\\r\\n  insfunc: function(){\\r\\n   var\n    d,i,n=0;\\r\\n   for (i=0;i<this.actions.length;i++) {\\r\\n    d=this.actions[i].firstChild.id;\\r\\n\n    \\   n=Math.max(n,parseFloat(d.slice(d.indexOf(\\"_\\")+1))) //avoid collisions\\r\\n\n    \\  }\\r\\n   n++;\\r\\n   this.target.appendChild($(\\"view_stamp\\").cloneNode(true)).setAttribute(\\"id\\",\\"view_\\"+n);\\r\\n\n    \\  $(\\"views_dir\\").appendChild($(\\"title_stamp\\").cloneNode(true)).setAttribute(\\"id\\",\n    \\"view_title_\\"+n);\\r\\n   $(\\"view_title_\\"+n).childNodes[0].innerHTML=$(\\"view_title_\\"+n).childNodes[1].innerHTML=this.insname;\\r\\n\n    \\  $(\\"view_\\"+n).name=\\"mediatype[views][][\\"+this.insname+\\"]\\";\\r\\n   $(\\"view_\\"+n).parentNode.className=\\"fill\\";\\r\\n\n    \\  this.selfunc($(\\"view_title_\\"+n));\\r\\n  },\\r\\n  selfunc: function(a) {\\r\\n\n    \\  for (var b=e=0,c=$(\\"views_dir\\").childNodes;b<c.length;b++) {\\r\\n    if (c[b].nodeType==3)\n    continue;\\r\\n    e++;\\r\\n    d=(c[b]==a ? 0 : 1);\\r\\n    c[b].childNodes[d].style.display=\\"none\\";\\r\\n\n    \\   c[b].childNodes[1-d].style.display=\\"inline\\";\\r\\n    $(\\"view_\\"+e).parentNode.style.display=(d?\\"none\\":\\"block\\")\\r\\n\n    \\  }\\r\\n  },\\r\\n  insloc: function () {return $(\\"views_dir\\")},\\r\\n  finalfunc:\n    function(a) {\\r\\n   if (!$(\\"view_\\"+a)) {\\r\\n    $(\\"views_dir\\").removeChild($(\\"view_title_\\"+a));\\r\\n\n    \\   var b=1;\\r\\n    while (!$(\\"view_\\"+a)&&b!=1000) {\\r\\n     a+=2*b*(b%2)-b;\n    //1D spiral search (for del)\\r\\n     b++\\r\\n    }\\r\\n    this.selfunc($(\\"view_title_\\"+a))\\r\\n\n    \\  }\\r\\n  }\\r\\n }\\r\\n},\\r\\nloadfunc = function () {lists.views_container.selfunc($(\\"views_dir\\").firstChild)};\\r\\n\\r\\nfunction\n    arity_display(n) {\\r\\n var i=1;\\r\\n while (!(target=$(\\"arg_\\"+n))&&i!=1000) {\\r\\n\n    \\ n+=2*i*(i%2)-i; //1D spiral search (for del)\\r\\n  i++\\r\\n }\\r\\n var a=new List((sublist=target.parentNode.parentNode).id);\\r\\n\n    if (a.length===1) {sublist.previousSibling.previousSibling.style.display=\\"none\\"}\\r\\n\n    else sublist.previousSibling.previousSibling.style.display=\\"block\\";\\r\\n if ((f=sublist.firstChild.firstChild).firstChild.innerHTML===\\"\\\\u2193\\")\n    f.removeChild(f.firstChild);\\r\\n if (f!==target&&target.firstChild.innerHTML!==\\"\\\\u2193\\")\n    {\\r\\n  target.insertBefore(document.createElement(\\"div\\"),target.firstChild).setAttribute(\\"class\\",\\"arrow\\");\\r\\n\n    \\ target.firstChild.innerHTML=\\"&darr;\\"\\r\\n }\\r\\n}"\n- css: ! "#view_stamp,#argument_stamp,.ins_stamp {\\r\\n display:none\\r\\n}\\r\\n.ins_stamp\n    {\\r\\n margin-top: .5em\\r\\n}\\r\\n.ins_stamp input {\\r\\n width: 100%;\\r\\n max-width:20em;\\r\\n\n    padding: 2px\\r\\n}\\r\\n#signature_frame {\\r\\n padding:0px 20px 0px 20px;\\r\\n max-height:100%;\\r\\n\n    overflow:auto\\r\\n}\\r\\n#ins_item {\\r\\n clear:left\\r\\n}\\r\\n#arguments_container\n    li {\\r\\n width:60%;\\r\\n margin:20px\\r\\n}\\r\\n#arguments_container li:only-child\n    {\\r\\n margin:0px;\\r\\n}\\r\\n#views_container {\\r\\n display:table-cell\\r\\n}\\r\\n.arrow\n    {\\r\\n text-align:center;\\r\\n font-size:x-large\\r\\n}\\r\\n.summary {\\r\\n overflow:hidden\\r\\n}\\r\\n.fill\n    {\\r\\n width:100%;\\r\\n height:100%;\\r\\n margin:0px;\\r\\n padding:0px\\r\\n}\\r\\n.navlist\n    {\\r\\n display:table-cell;\\r\\n height:100%;\\r\\n width:15%;\\r\\n vertical-align:top;\\r\\n\n    text-align:right;\\r\\n padding-right:10px;\\r\\n margin-right:0px\\r\\n}\\r\\n.navlist>div,.navlist>ul>li\n    {\\r\\n padding:0px 5px 0px 5px\\r\\n}\\r\\n.navlist>* {\\r\\n padding:5px 0px 5px 0px\\r\\n}"\n- partial:title: ! "<%-\\r\\n t = (title.nil? ? \\"\\" : title.keys[0])\\r\\n n = ((defined?\n    title_counter) ? title_counter + 1 : 0)\\r\\n-%><div id=\\"<%= (t == \\"\\") ? \\"title_stamp\\"\n    : \\"view_title_\\" + n.to_s %>\\"><%= link_to t, \\"#\\", :onmousedown => \\"lists.views_container.selfunc(this.parentNode)\\"\n    %><%= link_to t, \\"#\\", :id => \\"title\\", :onmousedown => \\"if (event.which===1)\n    stringedit(this,true);return false\\", :style => \\"background-color:orange\\" %><input\n    class=\\"hide\\" onkeypress=\\"if (event.which===13) {stringedit(this,false);$('view_'\n    + parseFloat(this.parentNode.id.slice(11))).name='mediatype[views][]['+(t=this.previousSibling.firstChild.data)+']';this.parentNode.firstChild.firstChild.data=t}\\"\n    onblur=\\"if (this.style.display!=='none') {stringedit(this,false);$('view_' +\n    parseFloat(this.parentNode.id.slice(11))).name='mediatype[views][]['+(t=this.previousSibling.firstChild.data)+']';this.parentNode.firstChild.firstChild.data=t}\\"\n    /></div>"\n- partial:view: ! "<%-\\r\\n view||={}\\r\\n view_counter||=0\\r\\n n=(view_counter+1).to_s\\r\\n\n    unless view=={}\\r\\n  -%><li class=\\"fill\\"><%-\\r\\n end\\r\\n-%><textarea class='editor_window'\n    id='<%= (view=={})?\\"view_stamp\\":\\"view_\\" + n + \\"' name='mediatype[views][][\\"+view.keys[0]+\\"]\\"\n    %>'><%= view.values[0] %></textarea><%-\\r\\n unless view=={}\\r\\n  -%></li><%-\\r\\n\n    end\\r\\n-%>"\n- partial:argument: ! "<%-\\r\\n argument||={}\\r\\n argument_counter||=0\\r\\n n=(argument_counter+1).to_s\\r\\n\n    unless argument=={}\\r\\n  -%><li><%-\\r\\n end\\r\\n-%><div id=\\"<%= (argument=={})?\\"argument_stamp\\":(\\"arg_\\"+n)\n    %>\\" class=\\"summary\\"><%- if argument_counter>0 -%><div class=\\"arrow\\">&#x2193;</div><%-\n    end -%>\\r\\n <div class=\\"data\\">\\r\\n  <span>Instance of <span class=\\"type_name\\"><%=\n    argument.values[0] %></span> type, as <%= link_to argument.keys[0], \\"#\\", :id\n    => \\"title\\", :onmousedown => \\"if (event.which===1) stringedit(this,true);return\n    false\\" %><input class=\\"hide\\" value=\\"<%= argument.keys[0] %>\\" onkeypress=\\"if\n    (event.which===13) {stringedit(this,false);this.nextSibling.name='mediatype[arguments][]['+this.previousSibling.firstChild.data+']'}\\"\n    onblur=\\"if (this.style.display!=='none') {stringedit(this,false);this.nextSibling.name='mediatype[arguments][]['+this.previousSibling.firstChild.data+']'}\\"/><input<%=\n    (argument=={})?\\"\\":(\\" name='mediatype[arguments][][\\"+argument.keys[0]+\\"]'\n    value='\\"+argument.values[0]+\\"'\\") %> type=\\"hidden\\" /></span>\\r\\n </div>\\r\\n\n    <span style=\\"float:left\\"><a href=\\"example.html\\"><div class=\\"thumb\\">Thumbnail</div></a></span>\\r\\n\n    <span>Description</span>\\r\\n <div class=\\"actions\\">\\r\\n  <a href=\\"discussion.html\\">Discussion</a>\\r\\n\n    \\ <span class=\\"view\\">\\r\\n   <a href=\\"editmediatype.html\\">View in mediatype\n    editor</a>\\r\\n  </span>\\r\\n </div>\\r\\n</div><%-\\r\\n unless argument=={}\\r\\n  -%></li><%-\\r\\n\n    end\\r\\n-%>"
5	12	---\n- Handlers: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n    args: handlers\n    code: ! "<div class=\\"table fill\\">\\r\\n <div class=\\"fill\\">\\r\\n  <div class=\\"navlist\\"\n      id=\\"handlers_dir\\"><%= render :partial => \\"m/title\\", :collection => @api.data.handlers.inject([]){|x,y|x<<Hash[[y]]},\n      :locals => {:loc => \\"handlers\\"} %></div\\r\\n  ><div class=\\"ins_stamp\\">Instance\n      of\\r\\n   <input class=\\"help_text\\" type=\\"text\\" size=\\"50\\" onkeypress=\\"if\n      (event.which==13) ins.call(this.parentNode.parentNode,this.value)\\"/>\\r\\n  </div>\\r\\n\n      \\ <ul id=\\"handlers_container\\" mediatype=\\"mediatype\\" class=\\"fill\\"><%= render\n      :partial => \\"m/box\\", :collection => @api.data.handlers.inject([]){|x,y|x<<Hash[[y]]},\n      :locals => {:loc => \\"handlers\\"} %></ul>\\r\\n </div>\\r\\n <%= render :partial\n      => \\"m/box\\", :locals => {:loc => \\"handlers\\"} %>\\r\\n <%= render :partial =>\n      \\"m/title\\", :locals => {:loc => \\"handlers\\"} %>\\r\\n</div>"\n- Function: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n    args: function\n    code: ! "<div class=\\"table fill\\">\\r\\n <div>\\r\\n  <input id=\\"func_sig\\" type=\\"text\\"\n      title=\\"API signature\\" name=\\"api[function][signature]\\" value=\\"<%= (@api.data.function[\\"signature\\"]||\\"\\").html_safe\n      %>\\" />\\r\\n </div>\\r\\n <div class=\\"fill\\">\\r\\n  <textarea id=\\"func_code\\"\n      class=\\"editor_window\\" title=\\"Function code\\" name=\\"api[function][code]\\"><%=\n      (@api.data.function[\\"code\\"]||\\"\\").html_safe %></textarea>\\r\\n </div>\\r\\n</div>"\n- Views: !ruby/hash:ActiveSupport::HashWithIndifferentAccess\n    args: views\n    code: ! "<div class=\\"table fill\\">\\r\\n <div class=\\"fill\\">\\r\\n  <div class=\\"navlist\\"\n      id=\\"views_dir\\"><%= render :partial => \\"m/title\\", :collection => @api.data.views.inject([]){|x,y|x<<Hash[[y]]},\n      :locals => {:loc => \\"views\\"} %></div\\r\\n  ><div class=\\"ins_stamp\\">Instance\n      of\\r\\n   <input class=\\"help_text\\" type=\\"text\\" size=\\"50\\" onkeypress=\\"if\n      (event.which==13) ins.call(this.parentNode.parentNode,this.value)\\"/>\\r\\n  </div>\\r\\n\n      \\ <ul id=\\"views_container\\" mediatype=\\"mediatype\\" class=\\"fill\\"><%= render\n      :partial => \\"m/box\\", :collection => @api.data.views.inject([]){|x,y|x<<Hash[[y]]},\n      :locals => {:loc => \\"views\\"} %></ul>\\r\\n </div>\\r\\n <%= render :partial =>\n      \\"m/box\\", :locals => {:loc => \\"views\\"} %>\\r\\n <%= render :partial => \\"m/title\\",\n      :locals => {:loc => \\"views\\"} %>\\r\\n</div>"\n	---\n- js: ! "eddisp.finalfunc = function(a){<%= \\"if (a===\\\\\\"Render\\\\\\") $(\\\\\\"render\\\\\\").src\n    = window.location.href.replace(/^.*\\\\\\\\//, '/')\\".html_safe unless params[:context].nil?\n    %>};\\r\\n\\r\\nvar lists={};\\r\\n\\r\\nfunction doFrames(fs) {\\r\\n for (n in fs) {\\r\\n\n    \\ lists[(f=fs[n])+\\"s_container\\"]={\\r\\n   insfunc: new Function(\\"\\\\\\r\\n    var\n    d,i,n=0;\\\\\\r\\n    for (i=0;i<this.actions.length;i++) {\\\\\\r\\n     d=this.actions[i].firstChild.id;\\\\\\r\\n\n    \\    n=Math.max(n,parseFloat(d.slice(d.indexOf('_')+1)))\\\\\\r\\n    }\\\\\\r\\n    n++;\\\\\\r\\n\n    \\   this.target.appendChild($('\\"+f+\\"_stamp').cloneNode(true)).setAttribute('id','\\"+f+\\"_'+n);\\\\\\r\\n\n    \\   $('\\"+f+\\"s_dir').appendChild($('\\"+f+\\"_title_stamp').cloneNode(true)).setAttribute('id',\n    '\\"+f+\\"_title_'+n);\\\\\\r\\n    $('\\"+f+\\"_title_'+n).firstChild.innerHTML=$('\\"+f+\\"_title_'+n).childNodes[1].innerHTML=this.insname;\\\\\\r\\n\n    \\   $('\\"+f+\\"_'+n).name='api[\\"+f+\\"s]['+this.insname+']';\\\\\\r\\n    $('\\"+f+\\"_'+n).parentNode.className='fill';\\\\\\r\\n\n    \\   this.selfunc($('\\"+f+\\"_title_'+n));\\\\\\r\\n   \\"),\\r\\n   insloc: new Function(\\"return\n    $('\\"+f+\\"s_dir')\\"),\\r\\n   selfunc: new Function(\\"a\\", \\"\\\\\\r\\n    for (var\n    b=e=0,c=$('\\"+f+\\"s_dir').childNodes;b<c.length;b++) {\\\\\\r\\n     if (c[b].nodeType==3)\n    continue;\\\\\\r\\n     e++;\\\\\\r\\n     d=(c[b]==a ? 0 : 1);\\\\\\r\\n     c[b].childNodes[d].style.display='none';\\\\\\r\\n\n    \\    c[b].childNodes[1-d].style.display='inline';\\\\\\r\\n     if ($('\\"+f+\\"_'+e))\n    $('\\"+f+\\"_'+e).parentNode.style.display=(d?'none':'inline')\\\\\\r\\n    }\\\\\\r\\n\n    \\  \\"),\\r\\n   finalfunc: new Function(\\"a\\", \\"\\\\\\r\\n    if (!$('\\"+f+\\"_'+a))\n    {\\\\\\r\\n     $('\\"+f+\\"s_dir').removeChild($('\\"+f+\\"_title_'+a));\\\\\\r\\n     for\n    (var c=1;$('\\"+f+\\"_'+(a+c));c++) {\\\\\\r\\n      $('\\"+f+\\"_'+(a+c)).id = '\\"+f+\\"_'\n    + (a+c-1);\\\\\\r\\n      $('\\"+f+\\"_title_'+(a+c)).id = '\\"+f+\\"_title_' + (a+c-1);\\\\\\r\\n\n    \\    }\\\\\\r\\n     var b=1;\\\\\\r\\n     while (!$('view_'+a)&&b!=1000) {\\\\\\r\\n      a+=2*b*(b%2)-b;\\\\\\r\\n\n    \\     b++\\\\\\r\\n     }\\\\\\r\\n     this.selfunc($('\\"+f+\\"_title_'+a))\\\\\\r\\n    }\\\\\\r\\n\n    \\  \\")\\r\\n  }\\r\\n }\\r\\n};\\r\\n\\r\\ndoFrames([\\"view\\",\\"handler\\"]);\\r\\n\\r\\nvar\n    loadfunc = function () {\\r\\n lists.views_container.selfunc($(\\"views_dir\\").firstChild);\\r\\n\n    lists.handlers_container.selfunc($(\\"handlers_dir\\").firstChild);\\r\\n};"\n- css: ! "#view_stamp,#handler_stamp,.ins_stamp {\\r\\n display:none\\r\\n}\\r\\n.ins_stamp\n    {\\r\\n margin-top: .5em\\r\\n}\\r\\n.ins_stamp input {\\r\\n width: 100%;\\r\\n max-width:\n    20em;\\r\\n padding: 2px\\r\\n}\\r\\n.fill {\\r\\n width:100%;\\r\\n height:100%;\\r\\n margin:0px;\\r\\n\n    padding:0px\\r\\n}\\r\\n.navlist {\\r\\n display:table-cell;\\r\\n height:100%;\\r\\n width:15%;\\r\\n\n    vertical-align:top;\\r\\n text-align:right;\\r\\n padding-right:10px;\\r\\n margin-right:0px\\r\\n}\\r\\n.navlist>div,.navlist>ul>li\n    {\\r\\n padding:0px 5px 0px 5px\\r\\n}\\r\\n.navlist>* {\\r\\n padding:5px 0px 5px 0px\\r\\n}\\r\\n.table\n    {\\r\\n display:table\\r\\n}\\r\\n.table > div {\\r\\n display:table-row\\r\\n}\\r\\n.editor_window,\n    #func_sig {\\r\\n outline:none\\r\\n}\\r\\n#func_sig {\\r\\n font-family:monofur,courier,monospace;\\r\\n\n    font-size:large;\\r\\n word-break:break-all;\\r\\n border:1px solid black;\\r\\n padding:2px;\\r\\n\n    margin-bottom:-3px;\\r\\n width:100%;\\r\\n box-sizing: border-box;\\r\\n -webkit-box-sizing:border-box;\\r\\n\n    -moz-box-sizing: border-box;\\r\\n -ms-box-sizing: border-box;\\r\\n display:table-cell\\r\\n}\\r\\n#func_code\n    {\\r\\n margin-top:5px\\r\\n}"\n- partial:title: ! "<%-\\r\\n t = (title.nil? ? \\"\\" : title.keys[0])\\r\\n title_counter||=0\\r\\n\n    n=(title_counter+1).to_s\\r\\n ls = loc.singularize\\r\\n-%><div id=\\"<%= (t == \\"\\")\n    ? \\"#{ls}_title_stamp\\" : \\"#{ls}_title_#{n}\\" %>\\"><%= link_to t, \\"#\\", :onmousedown\n    => \\"lists.#{loc}_container.selfunc(this.parentNode)\\" %><%= link_to t, \\"#\\",\n    :id => \\"title\\", :onmousedown => \\"if (event.which===1) stringedit(this,true);return\n    false\\", :style => \\"background-color:orange\\" %><input class=\\"hide\\" onkeypress=\\"if\n    (event.which===13) {stringedit(this,false);$('<%= ls %>_' + parseFloat(this.parentNode.id.slice(11))).name='api[<%=\n    loc %>]['+(t=this.previousSibling.firstChild.data)+']';this.parentNode.firstChild.firstChild.data=t}\\"\n    onblur=\\"if (this.style.display!=='none') {stringedit(this,false);$('<%= ls %>_'\n    + parseFloat(this.parentNode.id.slice(11))).name='api[<%= loc %>]['+(t=this.previousSibling.firstChild.data)+']';this.parentNode.firstChild.firstChild.data=t}\\"\n    /></div>"\n- partial:box: ! "<%-\\r\\n box||={}\\r\\n box_counter||=0\\r\\n n=(box_counter+1).to_s\\r\\n\n    ls = loc.singularize\\r\\n unless box=={}\\r\\n  -%><li class=\\"fill\\"><%-\\r\\n end\\r\\n-%><textarea\n    class='editor_window' id='<%= (box=={})?\\"#{ls}_stamp\\":\\"#{ls}_#{n}' name='api[#{loc}][#{box.keys[0]}]\\"\n    %>'><%= box.values[0] %></textarea><%-\\r\\n unless box=={}\\r\\n  -%></li><%-\\r\\n\n    end\\r\\n-%>"\n
\.


--
-- Name: editors_id_seq; Type: SEQUENCE SET; Schema: public; Owner: kotodama
--

SELECT pg_catalog.setval('editors_id_seq', 5, true);


--
-- Data for Name: frontpages; Type: TABLE DATA; Schema: public; Owner: kotodama
--

COPY frontpages (id, html) FROM stdin;
1	
\.


--
-- Name: frontpages_id_seq; Type: SEQUENCE SET; Schema: public; Owner: kotodama
--

SELECT pg_catalog.setval('frontpages_id_seq', 1, true);


--
-- Data for Name: media; Type: TABLE DATA; Schema: public; Owner: kotodama
--

COPY media (id, title, url, author, count, info, data_id, data_type, mediatype_id, created_at, updated_at) FROM stdin;
7	Frontpage	g	kotoda.ma	1	Frontpage mediatype.	4	Mediatype	1	2012-12-09 15:02:23.297131	2012-12-09 15:14:51.918173
8	editfrontpage	h	kotoda.ma	1	Frontpage editor.	4	Editor	3	2012-12-09 15:06:30.707022	2012-12-09 15:14:51.552328
6	editpage	f	kotoda.ma	2	Page editor.	3	Editor	3	2012-05-10 08:42:57.563699	2012-12-12 03:46:23.489611
11	scraps	k	kotoda.ma	0	Random writings.	2	Page	5	2012-12-12 03:46:24.131595	2012-12-12 03:46:24.131595
5	Page	e	kotoda.ma	2	Page mediatype.	3	Mediatype	1	2012-05-10 08:42:52.195652	2012-12-12 03:46:24.239553
9	kotoda.ma	i	kotoda.ma	76	The kotoda.ma frontpage!!	1	Frontpage	7	2012-12-09 15:14:51.838594	2012-12-25 15:50:09.921513
10	To do list	j	kotoda.ma	1	Just a simple list app, doesn't save anything so don't keep important info here for too long!	1	Page	5	2012-12-09 16:51:47.143134	2012-12-27 06:11:24.29192
2	editmediatype	b	kotoda.ma	6	Mediatype editor.	1	Editor	3	2012-05-01 03:00:41.279563	2012-12-29 14:36:24.572792
1	Mediatype	a	kotoda.ma	5	Mediatype mediatype.	1	Mediatype	1	2012-05-01 03:00:40.973689	2012-12-29 14:36:25.292359
4	editeditor	d	kotoda.ma	5	Editor editor.	2	Editor	3	2012-05-01 03:00:41.695625	2012-12-29 14:47:33.674983
3	Editor	c	kotoda.ma	5	Editor mediatype.	2	Mediatype	1	2012-05-01 03:00:41.481895	2012-12-29 14:47:34.5156
13	editapi	m	kotoda.ma	1	API editor.	5	Editor	3	2012-12-29 14:47:34.436657	2012-12-29 19:43:17.677551
12	Api	l	kotoda.ma	1	API mediatype.	5	Mediatype	1	2012-12-29 14:36:25.214694	2012-12-29 19:43:18.512788
14	lookup	n	kotoda.ma	26	Media search API.	1	Api	12	2012-12-29 19:43:18.411192	2012-12-30 08:15:09.50911
\.


--
-- Name: media_id_seq; Type: SEQUENCE SET; Schema: public; Owner: kotodama
--

SELECT pg_catalog.setval('media_id_seq', 14, true);


--
-- Data for Name: mediatypes; Type: TABLE DATA; Schema: public; Owner: kotodama
--

COPY mediatypes (id, arguments, views) FROM stdin;
2	---\n- mtype: Integer\n- forms: Array\n- views: Array\n	---\n- html: ! "<%-\\r\\n mt = @_media.mediatype.title.downcase\\r\\n @_title = \\"Edit \\" +\n    ((@_media.url!=\\"\\")?mt + \\" '\\" + @_media.title + \\"'\\":\\"new \\" + mt)\\r\\n @_editor.data.forms\n    << {\\"Render\\"=>{\\"code\\"=>\\"<iframe id=\\\\\\"render\\\\\\" class=\\\\\\"editor_window\\\\\\"></iframe>\\"}}\\r\\n-%>\\r\\n<%\n    content_for :head do %>\\r\\n<script type=\\"text/javascript\\">\\r\\nfunction toggle_frames(it)\n    {\\r\\n for (i in eddisp.frames) if ($(eddisp.frames[i]).style.display!==\\"none\\")\n    break;\\r\\n if (eddisp.menu[i]==it) return false;\\r\\n $(eddisp.frames[i]).style.display=\\"none\\";\\r\\n\n    $(eddisp.frames[j=eddisp.menu.indexOf(it)]).style.display=eddisp.display[j];\\r\\n\n    if (eddisp.finalfunc) eddisp.finalfunc(it);\\r\\n return eddisp.frames[i];\\r\\n}\\r\\nfunction\n    provoke() {\\r\\n for (b in (c=$$('menuchoice'))) {\\r\\n  c[b].onmouseover=function(){this.className+=\\"\n    provoke\\"};\\r\\n  c[b].onmouseout=function(){this.className=this.className.replace(/(?:^|\\\\s)provoke(?!\\\\S)/g\n    , '')}\\r\\n }\\r\\n}\\r\\nvar eddisp={\\r\\n frames:<%= @_editor.data.forms.map {|x|\n    x.keys[0].downcase + \\"_frame\\" }.to_s.html_safe %>,\\r\\n display:<%= @_editor.data.forms.map\n    {|x| \\"block\\" }.to_s.html_safe %>,\\r\\n menu:<%= @_editor.data.forms.map {|x|\n    x.keys[0] }.to_s.html_safe %>,\\r\\n operations:<%= @_editor.data.forms.map {|x|\n    x.values[0][\\"args\\"].nil? ? [] : x.values[0][\\"args\\"].split(\\",\\")}.to_s.html_safe\n    %>\\r\\n},\\r\\nargs=<%= ActiveSupport::JSON.encode(@_media.mediatype.data.arguments.inject(:merge)).html_safe\n    %>\\r\\n<%= render :inline => (@_editor.data.views[0] ? @_editor.data.views[0][\\"js\\"]\n    : \\"\\") %>;\\r\\n</script>\\r\\n<style type=\\"text/css\\">\\r\\n#menu_bar {\\r\\n float:right\\r\\n}\\r\\n#canvas>*,\n    html {\\r\\n height:100%\\r\\n}\\r\\n.page {\\r\\n margin-bottom:0px\\r\\n}\\r\\n.bottom textarea\n    {\\r\\n font-family:monofur,courier,monospace;\\r\\n font-size:large;\\r\\n word-break:break-all;\\r\\n\n    padding:2px\\r\\n}\\r\\n.dropdown {\\r\\n display:none\\r\\n}\\r\\nform {\\r\\n display:table\\r\\n}\\r\\nform>div\n    {\\r\\n display:table-row\\r\\n}\\r\\n.interface,.top,.bottom {\\r\\n display:table-cell;\\r\\n\n    padding:5px\\r\\n}\\r\\n.bottom>div {\\r\\n width:100%;\\r\\n height:100%;\\r\\n}\\r\\n.editor_window\n    {\\r\\n width:100%;\\r\\n height:100%;\\r\\n border:1px solid black;\\r\\n font-size:medium;\\r\\n\n    box-sizing: border-box;\\r\\n -webkit-box-sizing:border-box;\\r\\n -moz-box-sizing:\n    border-box;\\r\\n -ms-box-sizing: border-box\\r\\n}\\r\\n.frame_title {\\r\\n position:relative;\\r\\n\n    clear:after;\\r\\n z-index:1\\r\\n}\\r\\n.ops {\\r\\n position:absolute;\\r\\n right:0px;\\r\\n\n    background-color:white;\\r\\n z-index:0;\\r\\n opacity:0;\\r\\n border:1px solid grey;\\r\\n\n    border-radius:4px;\\r\\n -webkit-transition: opacity .25s ease;\\r\\n -moz-transition:\n    opacity .25s ease;\\r\\n -o-transition: opacity .25s ease;\\r\\n -ms-transition: opacity\n    .25s ease;\\r\\n transition: opacity .25s ease;\\r\\n -webkit-transition: background-color\n    .5s ease-in-out;\\r\\n -moz-transition: background-color .5s ease-in-out;\\r\\n -o-transition:\n    background-color .5s ease-in-out;\\r\\n -ms-transition: background-color .5s ease-in-out;\\r\\n\n    transition: background-color .5s ease-in-out;\\r\\n}\\r\\n.frame_title_div {\\r\\n position:relative\\r\\n}\\r\\n.frame_title_div:hover\n    > .ops {\\r\\n background-color:lightcyan;\\r\\n border-color:royalblue\\r\\n}\\r\\n.ops\n    > span {\\r\\n color:transparent;\\r\\n margin:4px\\r\\n}\\r\\n.menuchoice {\\r\\n background-color:transparent;\\r\\n\n    margin:0px 2px 0px 2px;\\r\\n -webkit-transition: background-color .25s ease-in-out;\n    \\r\\n -moz-transition: background-color .25s ease-in-out; \\r\\n -o-transition: background-color\n    .25s ease-in-out;  \\r\\n -ms-transition: background-color .25s ease-in-out;  \\r\\n\n    transition: background-color .25s ease-in-out; \\r\\n}\\r\\n.provoke {\\r\\n background-color:orange\\r\\n}\\r\\n<%=\n    render :inline => (@_editor.data.views[1] ? @_editor.data.views[1][\\"css\\"] :\n    \\"\\") %>\\r\\n</style><%-\\r\\n end\\r\\n\\r\\n content_for :onload do\\r\\n-%> for (j in\n    eddisp.frames) $(eddisp.frames[j]).style.display=\\"none\\";\\r\\n $(eddisp.frames[j]).style.display=eddisp.display[j];\\r\\n\n    eddisp.finalfunc(eddisp.menu[j]);\\r\\n if (window.loadfunc) loadfunc();\\r\\n document.styleSheets[1].insertRule(\\".bottom\n    textarea {resize:none}\\", document.styleSheets[1].cssRules.length)<%-\\r\\n end\\r\\n-%>\\r\\n<%=\n    render :partial => \\"g/login\\" %>\\r\\n<%= form_for @_media, :url => {:action =>\n    (@_media.url ? \\"update\\" : \\"create\\")}, :html => {:class => \\"page\\"} do |p|%>\\r\\n<div><%=\n    render :partial => \\"g/interface\\" %></div>\\r\\n <div>\\r\\n  <div id=\\"editor_actions\\"\n    class=\\"top\\">\\r\\n   <span class=\\"section_title\\"\\r\\n    ><%= link_to mt.capitalize,\n    root_url + @_media.mediatype.url %>: <%= link_to @_media.title, root_url + @_media.url,\n    :id => \\"title\\", :onmousedown => \\"if (event.which===1) stringedit(this,true);return\n    false\\" %><%= p.text_field :title, :class=>\\"hide\\", :onkeypress=>\\"if (event.which===13)\n    stringedit(this,false)\\", :onblur=>\\"if (this.style.display!=='none') stringedit(this,false)\\"\n    %>\\r\\n   </span>\\r\\n   <span class=\\"section_info\\">\\r\\n    <span onclick=\\"textedit(this,true)\\">Info</span\\r\\n\n    ><div class=\\"dropdown\\">\\r\\n<%= p.text_area :info, :onkeypress => \\"if (event.which===13&&!event.shiftKey)\n    {textedit(this.parentNode,false);return false}\\", :onblur => \\"if ((p=this.parentNode).style.display!=='none')\n    textedit(p,false)\\" %></div>\\r\\n   </span>\\r\\n   <div id=\\"menu_bar\\" class=\\"actions\\">\\r\\n\n    \\   <a href=\\"#\\" onclick=\\"document.forms[1].submit()\\">Save</a>\\r\\n    <%= link_to\n    \\"New\\", root_url + @_editor.url %>\\r\\n    <%- @_editor.data.forms.each do |f|\n    -%><div class=\\"frame_title_div\\"><a href=\\"#\\" class=\\"frame_title\\" onmousedown=\\"if\n    (['Array','Hash'].indexOf(args[a=eddisp.operations[eddisp.menu.indexOf('<%= f.keys[0]\n    %>')][0]])!=-1) menu({it:$('<%= f.keys[0].downcase %>_ops_menu'),list:{Insert:new\n    Function('ins.call($(&quot;'+a+'_container&quot;))'),Delete:new Function('del.call($(&quot;'+a+'_container&quot;))'),Move:location.href},onmenu:function(){$('<%=\n    f.keys[0].downcase %>_ops_menu').style.opacity='1';provoke()},disarm:function(){$('<%=\n    f.keys[0].downcase %>_ops_menu').style.opacity='0'}});toggle_frames(this.firstChild.data);return\n    false\\"><%= f.keys[0] %></a><span id=\\"<%= f.keys[0].downcase %>_ops_menu\\" class=\\"ops\\"><span><%=\n    f.keys[0] %></span></span></div><%- end -%>\\r\\n   </div>\\r\\n  </div>\\r\\n </div>\\r\\n\n    <div>\\r\\n  <div id=\\"canvas\\" class=\\"bottom\\"><%= fields_for @_media.data do\n    |data| %>\\r\\n   <%= render :partial => \\"c/frame\\", :collection => @_editor.data.forms,\n    :locals => {:data => data} %>\\r\\n  <%- end -%></div>\\r\\n </div>\\r\\n<%- end -%>"\n- partial:frame: <div id="<%= frame.keys[0].downcase %>_frame"><%= render :inline\n    => frame.values[0]["code"], :locals => {:data => data} %></div>\n- partial: <p><b>Coming soon!</b></p>\n
3	---\n- html: Text\n	---\n- html: ! "<%-\\r\\n @page.count += 1\\r\\n @page.save\\r\\n-%><%= render :inline => @page.data.html\n    %>"\n
4	---\n- html: Text	---\n- html: ! "<%-\\r\\n @frontpage.count += 1\\r\\n @frontpage.save\\r\\n @_title = \\"Make\n    and share websites on kotoda.ma\\"\\r\\n-%>\\r\\n<% content_for :head do -%>\\r\\n<script\n    type=\\"text/javascript\\">\\r\\nif (document.cookie&&document.cookie.indexOf(\\"login\\")!=-1) window.location=\\"home.html\\";\\r\\nvar\n    editor={page:{editpage:\\"/f\\"}}\\r\\n</script>\\r\\n<style type=\\"text/css\\">\\r\\nbody\n    {\\r\\n text-align:center\\r\\n}\\r\\n#logo {\\r\\n width:auto;\\r\\n height:auto;\\r\\n padding:20px\\r\\n}\\r\\n#showcase_title\n    {\\r\\n padding:0px 0px 0px 20px;\\r\\n}\\r\\n.body {\\r\\n padding:20px 0px 20px 0px\\r\\n}\\r\\n.interface\n    {\\r\\n margin:0px\\r\\n}\\r\\n.page {\\r\\n margin-top:20px\\r\\n}\\r\\n.left,.right {\\r\\n\n    width:50%\\r\\n}\\r\\n.data {\\r\\n float:left\\r\\n}\\r\\n.command_list {\\r\\n margin:20px\\r\\n}\\r\\n</style><%-\\r\\n\n    end\\r\\n content_for :onload do -%> var i,views=document.getElementsByClassName(\\"view\\");\\r\\n\n    for (i=0;i<views.length;i++) views[i].onmousedown=viewlinks;\\r\\n<%- end -%>\\r\\n<%=\n    render :partial => \\"g/interface\\" %>\\r\\n<%= render :partial => \\"g/login\\" %>\\r\\n<table\n    id=\\"index_showcase\\" class=\\"page\\">\\r\\n <tr>\\r\\n  <td id=\\"showcase_title\\"\n    class=\\"page_title\\" colspan=\\"2\\" >Trending...</td>\\r\\n </tr>\\r\\n <tr>\\r\\n\\r\\n\n     <td id=\\"nullaries\\" class=\\"left\\">\\r\\n   <%= link_to \\"Pages\\", \\"e\\", :class\n    => \\"section_title\\" %><br/>\\r\\n<%= render :partial => \\"g/summary\\", :collection\n    => Media.where(:data_type => \\"Page\\").order(\\"count DESC,created_at DESC\\").limit(2)\n    %>\\r\\n\\r\\n   <a href=\\"#\\" class=\\"section_title\\">Images</a>\\r\\n   <table id=\\"image_1\\"\n    mediatype=\\"image\\">\\r\\n    <tr>\\r\\n     <td id=\\"image_1_thumb\\" class=\\"thumb\\"\n    rowspan=\\"3\\"><a href=\\"media/example.jpg\\">Thumbnail</a></td>\\r\\n     <td id=\\"image_1_title\\"\n    class=\\"data\\">\\r\\n      <a href=\\"media/example.jpg\\">Example image</a>\\r\\n      <a\n    href=\\"userpage.html\\">Aidan</a>\\r\\n      <span>7 views</span>\\r\\n     </td>\\r\\n\n       <tr>\\r\\n     <td id=\\"image_1_desc\\" colspan=\\"2\\">Another placeholder</td>\\r\\n\n       </tr>\\r\\n    <tr>\\r\\n     <td class=\\"actions\\" colspan=\\"2\\">\\r\\n      <a\n    href=\\"discussion.html\\">Discussion</a>\\r\\n     </td>\\r\\n    </tr>\\r\\n   </table>\\r\\n\\r\\n\n     </td>\\r\\n\\r\\n  <td id=\\"polyadics\\" class=\\"right\\">\\r\\n   <a href=\\"show_commands.html\\"\n    class=\\"section_title\\">Commands</a><br/>\\r\\n   <ul class=\\"command_list\\" mediatype=\\"command\\">\\r\\n\\r\\n\n       <li id=\\"command_1\\">\\r\\n     <div class=\\"data\\" style=\\"float:left\\">\\r\\n\n         <a href=\\"example.html\\">show</a>\\r\\n      <span>122 calls</span>\\r\\n      <a\n    href=\\"userpage.html\\">kotoda.ma</span>\\r\\n     </div>\\r\\n     <div class=\\"actions\\">\\r\\n\n          <a href=\\"discussion.html\\">Discussion</a>\\r\\n       <span class=\\"view\\">\\r\\n\n           <a href=\\"editcommand.html\\">View in command editor</a>\\r\\n       </span>\\r\\n\n        </div>\\r\\n    </li>\\r\\n\\r\\n    <li id=\\"command_2\\">\\r\\n     <div class=\\"data\\">\\r\\n\n         <a href=\\"example.html\\">edit</a>\\r\\n      <span>46 calls</span>\\r\\n      <a\n    href=\\"userpage.html\\">kotoda.ma</span>\\r\\n     </div>\\r\\n     <div class=\\"actions\\">\\r\\n\n          <a href=\\"discussion.html\\">Discussion</a>\\r\\n       <span class=\\"view\\">\\r\\n\n           <a href=\\"editcommand.html\\">View in command editor</a>\\r\\n       </span>\\r\\n\n        </div>\\r\\n    </li>\\r\\n\\r\\n    <li id=\\"command_3\\">\\r\\n     <div class=\\"data\\">\\r\\n\n         <a href=\\"example.html\\">Entry</a>\\r\\n      <span># Calls</span>\\r\\n      <a\n    href=\\"userpage.html\\">Suggester</span>\\r\\n     </div>\\r\\n     <div class=\\"actions\\">\\r\\n\n          <a href=\\"discussion.html\\">Discussion</a>\\r\\n       <span class=\\"view\\">\\r\\n\n           <a href=\\"editcommand.html\\">View in command editor</a>\\r\\n       </span>\\r\\n\n        </div>\\r\\n    </li>\\r\\n\\r\\n   </ul>\\r\\n  </td>\\r\\n\\r\\n </tr>\\r\\n</table>"\n- partial:summary: ! "<%-\\r\\n n = summary_counter.to_s\\r\\n t = summary.data_type.downcase\\r\\n\n    mt = Media.where(:title => t.capitalize, :data_type => \\"Mediatype\\")[0]\\r\\n e\n    = Editor.where(:mtype => mt.id)[0].media[0]\\r\\n-%>\\r\\n<table id=\\"<%= t + '_'\n    + n %>\\" mediatype=\\"<%= t %>\\">\\r\\n <tr>\\r\\n  <td id=\\"<%= t + '_' + n %>_thumb\\"\n    class=\\"thumb\\" rowspan=\\"3\\"><%= link_to \\"Thumbnail\\", summary.url %></td>\\r\\n\n     <td id=\\"<%= t + '_' + n %>_title\\" class=\\"data\\">\\r\\n   <%= link_to summary.title,\n    summary.url %>\\r\\n   <%= link_to summary.author, \\"userpage.html\\" %>\\r\\n   <span><%=\n    summary.count.to_s + \\" view\\" + (summary.count==1 ? \\"\\" : \\"s\\") %></span>\\r\\n\n     </td>\\r\\n </tr>\\r\\n <tr>\\r\\n  <td id=\\"<%= t + '_' + n %>_desc\\" colspan=\\"2\\">\\r\\n\n      <span><%= summary.info %></span>\\r\\n<%- if true -%>\\r\\n   <span>(<%= link_to\n    summary.data_type, mt.url %>)</span>\\r\\n<%- end -%>\\r\\n  </td>\\r\\n </tr>\\r\\n <tr>\\r\\n\n     <td class=\\"actions\\" colspan=\\"2\\">\\r\\n   <%= link_to \\"Discussion\\", talk_media_path(summary.url)\n    %>\\r\\n   <span class=\\"view\\">\\r\\n    <%= link_to \\"View in \\" + t + \\" editor\\",\n    edit_media_path(summary.url) %>\\r\\n   </span>\\r\\n  </td>\\r\\n </tr>\\r\\n</table>"\n- partial:interface: ! "<div class=\\"interface\\">\\r\\n <input type=\\"hidden\\" id=\\"logo\\"\n    />\\r\\n <%= link_to image_tag(\\"kotodama_logo_black.jpg\\", :alt => \\"kotoda.ma\\",\n    :title => \\"kotoda.ma\\", :id => 'logo'), root_url %>\\r\\n <input id=\\"input\\" class=\\"help_text\\"\n    type=\\"text\\" value=\\"command or search\\" size=\\"50\\" onfocus=\\"inputFocus('input','command\n    or search')\\" onblur=\\"inputBlur('input','command or search')\\"/><br/>\\r\\n</div>"\n- partial:login: ! "<div id=\\"login_box\\" onmouseover=\\"login_box(true)\\" onmouseout=\\"login_box(false)\\">\\r\\n\n    <span id=\\"login_help\\">Help text.</span>\\r\\n <a id=\\"login\\" href=\\"#\\" onclick=\\"login(true)\\">Login</a>\\r\\n\n    <a id=\\"logout\\" href=\\"#\\" onclick=\\"logout()\\">Logout</a>\\r\\n <a id=\\"register\\"\n    href=\\"#\\" onclick=\\"login(false)\\">Register</a>\\r\\n <form id=\\"login_form\\">\\r\\n\n     <input id=\\"username\\" class=\\"help_text\\" type=\\"text\\" size=\\"15\\" onfocus=\\"inputFocus('username','Username')\\"\n    onblur=\\"loginObj.username=this.value;inputBlur('username','Username')\\" onkeypress=\\"enter(this,event)\\"/>\\r\\n\n     <input id=\\"password\\" class=\\"help_text\\" type=\\"text\\" size=\\"15\\" onfocus=\\"inputFocus('password','Password')\\"\n    onblur=\\"loginObj.password=this.value;inputBlur('password','Password')\\" onkeypress=\\"enter(this,event)\\"/>\\r\\n\n     <div id=\\"reg_form\\">\\r\\n   <input id=\\"email\\" class=\\"help_text\\" type=\\"text\\"\n    size=\\"20\\" onfocus=\\"inputFocus('email','Email')\\" onblur=\\"loginObj.email=this.value;inputBlur('email','Email')\\"\n    onkeypress=\\"enter(this,event)\\"/>\\r\\n   <div>Capcha</div>\\r\\n  </div>\\r\\n </form>\\r\\n</div>"
5	---\n- handlers: Hash\n- function: Hash\n- views: Hash\n	---\n- html: ! "<%-\\r\\n @api.count += 1\\r\\n @api.save\\r\\n-%><%-\\r\\n argsHash = Hash[ @api.data.function[\\"signature\\"].split(\\"\n    -> \\").map{|x| x.split(\\":\\").reverse } ]\\r\\n readQuery = Hash[ argsHash.each\n    {|key, _| [key, params[key.to_sym] ] } ]\\r\\n-%><%=\\r\\n if readQuery.value?(nil)\\r\\n\n    \\ render :inline => \\"Error - Missing arguments\\"\\r\\n else\\r\\n  Api.class_eval(\\"def\n    api_call(\\" + readQuery.keys.join(\\", \\") + \\") \\" + @api.data.function[\\"code\\"]\n    + \\" end\\")\\r\\n  result = Api.api_call.send(readQuery)\\r\\n  render :inline =>\n    @api.data.views[\\"html\\"], locals => {:result => result}\\r\\n  Api.class_eval(\\"remove_method\n    :api_call\\")  #TODO: needs unique name\\r\\n end\\r\\n%>\\r\\n"\n- json: ! "<%-\\r\\n @api.count += 1\\r\\n @api.save\\r\\n-%><%-\\r\\n argsHash = Hash[ @api.data.function[\\"signature\\"].split(\\"\n    -> \\").map{|x| x.split(\\":\\").reverse } ]\\r\\n readQuery = Hash[ argsHash.each\n    {|key, _| [key, params[key.to_sym] ] } ]\\r\\n-%><%=\\r\\n if readQuery.value?(nil)\\r\\n\n    \\ render :json => {\\"Error\\" => \\"Missing arguments\\"}\\r\\n else\\r\\n  Api.class_eval(\\"def\n    api_call(\\" + readQuery.keys.join(\\", \\") + \\") \\" + @api.data.function[\\"code\\"].html_safe\n    + \\" end\\")\\r\\n  result = Api.api_call.send(readQuery)\\r\\n  render :json => @api.data.views[\\"json\\"],\n    locals => {:result => result}\\r\\n  Api.class_eval(\\"remove_method :api_call\\")\n    \\ #TODO: needs unique name\\r\\n end\\r\\n%>\\r\\n"\n
1	---\n- arguments: Array\n- views: Array\n	---\n- html: ! "<%-\\r\\n tt = @mediatype.title.downcase\\r\\n @_title = \\"All \\" + tt.pluralize\\r\\n\n    media = Media.where(:data_type => tt.capitalize)\\r\\n#media.shift if tt==\\"mediatype\\"\\r\\n\n    mt = Media.where(\\"title = ?\\", @mediatype.data_type)[0]\\r\\n e = Editor.where(:mtype\n    => @mediatype.id)[0].media[0]\\r\\n\\r\\n content_for :head do\\r\\n-%><script type=\\"text/javascript\\">\\r\\nvar\n    editor={\\r\\n mediatype:{editmediatype:\\"/b\\"},\\r\\n <%= tt %>:{<%= Editor.where(:mtype\n    => @mediatype.id).map do |ee|\\r\\n ee.media[0].title + \\":\\\\\\"/\\" + ee.media[0].url\n    + \\"\\\\\\"\\"\\r\\nend[0].html_safe %>}\\r\\n};\\r\\n</script><%-\\r\\n end\\r\\n\\r\\n content_for\n    :onload do\\r\\n  -%> var i,views=document.getElementsByClassName(\\"view\\");\\r\\n\n    for (i in views) views[i].onmousedown=viewlinks;<%-\\r\\n end -%>\\r\\n<%= render\n    :partial => \\"g/login\\" %>\\r\\n<%= render :partial => \\"g/interface\\" %>\\r\\n<table\n    id=\\"<%= tt %>_page\\" class=\\"page\\">\\r\\n <tr>\\r\\n\\r\\n  <td id=\\"<%= tt %>_content\\"\n    class=\\"left\\">\\r\\n   <span class=\\"page_title\\">'<%= tt.capitalize %>' mediatype\n    summary</span>\\r\\n\\r\\n   <table id=\\"<%= tt %>_type\\" mediatype=\\"<%= mt.title.downcase\n    %>\\">\\r\\n    <tr>\\r\\n     <td id=\\"<%= tt %>_type_thumb\\" class=\\"thumb\\" rowspan=\\"3\\"><a\n    href=\\"example.html\\">Thumbnail</a></td>\\r\\n     <td id=\\"<%= tt %>_type_title\\"\n    class=\\"data\\">\\r\\n      <%= link_to \\"New \\" + tt, root_url + e.url %>\\r\\n      <%=\n    link_to @mediatype.author, \\"userpage.html\\" %>\\r\\n      <span><%= @mediatype.count.to_s\n    + \\" instance\\" + (@mediatype.count==1 ? \\"\\" : \\"s\\") %></span>\\r\\n     </td>\\r\\n\n    \\   </tr>\\r\\n    <tr>\\r\\n    <td id=\\"<%= tt %>_desc\\" colspan=\\"2\\">\\r\\n     <span><%=\n    @mediatype.info %></span>\\r\\n     <span>(<%= link_to mt.title, mt.url %>)</span>\\r\\n\n    \\   </td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n     <td class=\\"actions\\" colspan=\\"2\\">\\r\\n\n    \\     <%= link_to \\"Discussion\\", talk_media_url(@mediatype.url) %>\\r\\n      <span\n    class=\\"view\\">\\r\\n       <%= link_to \\"View in \\" + mt.title.downcase + \\" editor\\",\n    edit_media_url(@mediatype.url) %>\\r\\n      </span>\\r\\n     </td>\\r\\n    </tr>\\r\\n\n    \\  </table>\\r\\n   <div class=\\"canvas\\" mediatype=\\"<%= tt %>\\"><%= render :partial\n    => \\"a\\", :collection => media %></div>\\r\\n  </td>\\r\\n\\r\\n  <td id=\\"ads\\" class=\\"right\\">\\r\\n\n    \\  <table class=\\"ad\\">\\r\\n    <tr>\\r\\n     <td>\\r\\n      <div class=\\"ad_image\\">\\r\\n\n    \\      <div class=\\"dummy_ad\\">\\r\\n        <a href=\\"ad.html\\"><img style=\\"width:55px;height:40px\\"\n    src=\\"/assets/kotodama_logo_2.png\\"/></a>\\r\\n       </div>\\r\\n      </div>\\r\\n\n    \\    </td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n     <td><a href=\\"ad.html\\">Want ad space?</a></td>\\r\\n\n    \\   </tr>\\r\\n   </table>\\r\\n  </td>\\r\\n\\r\\n </tr>\\r\\n</table>"\n- partial: ! "<%-\\r\\n n = a_counter.to_s\\r\\n t = a.data_type.downcase\\r\\n mt = Media.where(:title\n    => t.capitalize, :data_type => \\"Mediatype\\")[0]\\r\\n e = Editor.where(:mtype =>\n    mt.id)[0].media[0]\\r\\n noun = ([\\"Mediatype\\", \\"Editor\\"].include? mt.title)\n    ? \\"instance\\" : \\"view\\"\\r\\n-%>\\r\\n<table id=\\"<%= t + '_' + n %>\\" mediatype=\\"<%=\n    t %>\\">\\r\\n <tr>\\r\\n  <td id=\\"<%= t + '_' + n %>_thumb\\" class=\\"thumb\\" rowspan=\\"3\\"><%=\n    link_to \\"Thumbnail\\", a.url %></td>\\r\\n  <td id=\\"<%= t + '_' + n %>_title\\"\n    class=\\"data\\">\\r\\n   <%= link_to a.title, a.url %>\\r\\n   <%= link_to a.author,\n    \\"userpage.html\\" %>\\r\\n   <span><%= a.count.to_s + \\" \\" + (a.count==1 ? noun\n    : noun.pluralize) %></span>\\r\\n  </td>\\r\\n </tr>\\r\\n <tr>\\r\\n  <td id=\\"<%= t\n    + '_' + n %>_desc\\" colspan=\\"2\\">\\r\\n   <span><%= a.info %></span>\\r\\n<%- if\n    true -%>\\r\\n   <span>(<%= link_to a.data_type, mt.url %>)</span>\\r\\n<%- end -%>\\r\\n\n    \\ </td>\\r\\n </tr>\\r\\n <tr>\\r\\n  <td class=\\"actions\\" colspan=\\"2\\">\\r\\n   <%=\n    link_to \\"Discussion\\", talk_media_path(a.url) %>\\r\\n   <span class=\\"view\\">\\r\\n\n    \\   <%= link_to \\"View in \\" + t + \\" editor\\", edit_media_path(a.url) %>\\r\\n\n    \\  </span>\\r\\n  </td>\\r\\n </tr>\\r\\n</table>"\n
\.


--
-- Name: mediatypes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: kotodama
--

SELECT pg_catalog.setval('mediatypes_id_seq', 6, false);


--
-- Data for Name: pages; Type: TABLE DATA; Schema: public; Owner: kotodama
--

COPY pages (id, html) FROM stdin;
1	<html>\n<head>\n<title>To do list</title>\n<link href="/assets/fonts.css?body=1" media="all" rel="stylesheet" type="text/css" />\n<style type="text/css">\nh1 {\n text-align:center;\n font-family:Constantia,Palatino,serif\n}\nsection {\n margin:5px;\n padding:5px;\n background-color:#E0E0E0;\n font-family:ProximaNova,Helvetica,Arial,sans-serif\n}\n#ops {\n margin:5px;\n padding:5px\n}\n</style>\n<script type="text/javascript">\nvar lock=0,\n    op;\nfunction $(a) {\n return document.getElementById(a)\n}\nfunction $$(a) {\n return document.getElementsByTagName(a)\n}\n\nfunction add() {\n if (op) {\n  $("list").removeChild($("list").lastChild);\n  return endAdd()\n }\n var a=document.createElement("section"),\n     b=document.createElement("input");\n b=$("list").appendChild(a).appendChild(b);\n b.onkeypress=function(e){if (e.which==13) doAdd.call(this,this.value)};\n b.style.width=document.documentElement.offsetWidth-36;\n window.onresize=function(){$("list").lastChild.lastChild.style.width=document.documentElement.offsetWidth-36};\n b.focus();\n lock=1;\n op="add"\n}\nfunction doAdd(a) {\n var b=this.parentNode;\n b.removeChild(this)\n if (a=="") {$("list").removeChild(b)}\n else {b.innerHTML=a};\n tdlist.push(a);\n $("persist").value=JSON.stringify(tdlist,null,2);\n endAdd()\n}\nfunction endAdd() {\n window.onresize=null;\n lock=0;\n op=""\n}\n\nfunction remove() {\n if ($("list").childNodes.length==0) return false;\n if (op) return endRemove();\n var a=$$("section"),\n     b=0;\n for (;b<a.length;b++) {\n  a[b].style.backgroundColor="orange";\n  a[b].onclick=function () { doRemove.call(this,null) }\n }\n lock=1;\n op="remove"\n}\nfunction doRemove() {\n var a=Array.prototype.indexOf.call(this.parentNode.childNodes,this);\n this.parentNode.removeChild(this);\n tdlist.splice(a,1);\n $("persist").value=JSON.stringify(tdlist,null,2)\n endRemove()\n}\nfunction endRemove() {\n var a=$$("section"),\n     b=0;\n for (;b<a.length;b++) {\n  a[b].style.backgroundColor=null;\n  a[b].onclick=null;\n }\n lock=0;\n op=""\n}\n\nfunction move() {\n if ($("list").childNodes.length==0) return false;\n if (op) {\n  tdlist=JSON.parse($("persist").value);\n  return endMove()\n }\n var a=$$("section"),\n     b=0;\n for (;b<a.length;b++) {\n  a[b].style.backgroundColor="yellow";\n  a[b].onclick=function () {\n   window.onkeydown=doMove;\n   window.tempthis=this;\n   window.tempindex=Array.prototype.indexOf.call(this.parentNode.childNodes,this);\n   var a=$$("section"),\n       b=0;\n   for (;b<a.length;b++) {\n    if (a[b]!=this) a[b].style.backgroundColor=null;\n    a[b].onclick=null\n   }\n  }\n }\n lock=1;\n op="move"\n}\nfunction doMove(e) {\n var a=window.tempthis,\n     b=window.tempindex,\n     c=a.parentNode,\n     d=null,\n     f;\n if (e.which==38 && a!=c.firstChild) {\n  d=a.previousSibling;\n  c.insertBefore(c.removeChild(a),d);\n  f=tdlist.slice(b-1,b+1);\n  tdlist.splice(b-1,2,f[1],f[0]);\n  window.tempindex--\n }\n else if (e.which==40 && a!=c.lastChild) {\n  if (a.nextSibling==c.lastChild) {\n   c.appendChild(c.removeChild(a))\n  }\n  else {\n   d=a.nextSibling.nextSibling;\n   c.insertBefore(c.removeChild(a),d)\n  }\n  f=tdlist.slice(b,b+2);\n  tdlist.splice(b,2,f[1],f[0]);\n  window.tempindex++\n }\n if (e.which==13) {\n  $("persist").value=JSON.stringify(tdlist,null,2);\n  endMove()\n }\n}\nfunction endMove() {\n window.onkeydown=null;\n window.tempthis=null;\n window.tempindex=null;\n var a=$$("section"),\n     b=0;\n for (;b<a.length;b++) {\n  a[b].style.backgroundColor=null;\n  a[b].onclick=null\n  a[b].innerHTML=tdlist[b]\n }\n lock=0;\n op=""\n}\n\nfunction edit() {\n if ($("list").childNodes.length==0) return false;\n if (op) return endEdit();\n var a=$$("section"),\n     b=0;\n for (;b<a.length;b++) {\n  a[b].style.backgroundColor="pink";\n  a[b].onclick=function () {\n   var a=document.createElement("input"),\n       b=$$("section"),\n       c=0;\n   this.appendChild(a);\n   a.value=this.childNodes[0].data;\n   this.removeChild(this.childNodes[0]);\n   a.onkeypress=function(e){if (e.which==13) doEdit.call(this,this.value)};\n   a.style.width=document.documentElement.offsetWidth-36;\n   window.tempthis=this;\n   window.onresize=function(){window.tempthis.lastChild.style.width=document.documentElement.offsetWidth-36};\n   for (;c<b.length;c++) {\n    b[c].style.backgroundColor=null;\n    b[c].onclick=null\n   }\n   a.select();\n  }\n }\n lock=1;\n op="edit"\n}\nfunction doEdit(a) {\n if (a=="") return false;\n a=this.parentNode;\n a.innerHTML=this.value;\n b=Array.prototype.indexOf.call(a.parentNode.childNodes,a);\n tdlist[b]=a.firstChild.data;\n $("persist").value=JSON.stringify(tdlist,null,2);\n endEdit()\n}\nfunction endEdit() {\n if (!window.onresize) {\n  var a=$$("section"),\n      b=0;\n  for (;b<a.length;b++) {\n   a[b].style.backgroundColor=null;\n   a[b].onclick=null\n  }\n }\n else {\n  a=window.tempthis;\n  b=Array.prototype.indexOf.call(a.parentNode.childNodes,a);\n  tdlist[b]=JSON.parse($("persist").value)[b];\n  window.tempthis.innerHTML=tdlist[b];\n  window.tempthis=null;\n  window.onresize=null\n }\n lock=0;\n op=""\n}\n\nfunction init(a) {\n for (var b=0;b<a.length;b++) {\n  c=document.createElement("section");\n  $("list").appendChild(c);\n  c.innerHTML=a[b]\n }\n}\n</script>\n</head>\n<body>\n <h1>To do list</h1>\n <article id="list"></article>\n <input id="persist" type="hidden"/>\n <div id="ops">\n  <input type="button" value="add" onclick="if(!lock||op==this.value)add();this.blur()"/>\n  <input type="button" value="remove" onclick="if(!lock||op==this.value)remove();this.blur()"/>\n  <input type="button" value="move" onclick="if(!lock||op==this.value)move();this.blur()"/>\n  <input type="button" value="edit" onclick="if(!lock||op==this.value)edit();this.blur()"/>\n </div>\n <script type="text/javascript">\n  if ($("persist").value != "") {\n   var tdlist=JSON.parse($("persist").value);\n   init(tdlist)\n  }\n  else {var tdlist=new Array()}\n </script>\n</body>\n</html>
2	<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<title>Scraps</title>\r\n<link href="/assets/fonts.css?body=1" media="all" rel="stylesheet" type="text/css" />\r\n<style type="text/css">\r\nh1 {\r\n text-align:center;\r\n font-family:Constantia,Palatino,serif\r\n}\r\narticle {\r\n width:60%;\r\n background-color:#E0E0E0;\r\n margin:1em auto 1em auto;\r\n padding:0.5em;\r\n font-family:ProximaNova,Helvetica,Arial,sans-serif;\r\n line-height:1.5em\r\n}\r\np {\r\n margin:1em;\r\n text-align:justify\r\n}\r\nli {\r\n margin:0.5em 1em 0.5em 0em;\r\n text-align:justify\r\n}\r\nol,ul {\r\n margin:1em 0em 1em 0em\r\n}\r\n.title {\r\n font:bold x-large Constantia,Palatino,serif\r\n}\r\ntime {\r\n margin-left:1em\r\n}\r\nhr {\r\n height:0.9em;\r\n text-align:center;\r\n color:transparent;\r\n border:0px\r\n}\r\nhr:before {\r\n color:black;\r\n content:'* * *'\r\n}\r\n</style>\r\n</head>\r\n<body>\r\n\r\n <h1>Scraps</h1>\r\n\r\n <article>\r\n  <p><span class="title">Much later... to do today</span><time>Early morning, December 8th 2012</time></p>\r\n  <ul>\r\n   <li>Wake up, have breakfast</li>\r\n   <li>Go to lagoon to hackeysack</li>\r\n   <li>Buy groceries, withdraw rent</li>\r\n   <li>Home for a shower, wash clothes, pay rent</li>\r\n   <li>Call Sarah, go over to pick up usb with server side scripts for the bird registry</li>\r\n   <li>Go to cafe to code</li>\r\n   <li>Check out Joomla</li>\r\n   <li>Apply for ABN, look up how it works for me</li>\r\n   <li>Go to Orchid Plaza to hang out and meet people</li>\r\n  </ul>\r\n </article>\r\n\r\n <article>\r\n  <p>The unskillfulness that my current troubles stem from, is that I lose all motivation when I perceive someone to be giving me orders from above. The solution to that is that I either give up my pride when I work, or take care to never value someone I work with above myself. Both are equally difficult, but the latter leaves my ambition intact.</p>\r\n </article>\r\n\r\n <article>\r\n  <p>Don't give a fuck about how I look/it looks, close your ears to individual reactions. Give up useless forms and habits, everything is up for review. Be proud when I excel.</p>\r\n  <p>Focus on the chosen goals. These are:</p>\r\n  <ul>\r\n   <li>Find a beautiful, sexy woman I can respect and make her my girlfriend.</li>\r\n   <li>Find a few intelligent, political, internet-loving friends to meet and exchange ideas with regularly.</li>\r\n   <li>Develop my website regardless of personal situation, balancing power-thirst with my best ethical code.</li>\r\n   <li>Modify my personal habits to those which make me feel best about myself.</li>\r\n  </ul>\r\n  <p>So, things I can do now to those ends:</p>\r\n  <ul>\r\n   <li>From when I leave home to when I come home, and on the phone, sms or IM, meet every person with confidence and compassion. Take interest in their life, commit to leaving the impression of a good, strong-willed person.</li>\r\n   <li>Habits to drop:\r\n    <ul>\r\n     <li>Nail, finger, lip biting</li>\r\n     <li>Indiscriminate glancing</li>\r\n     <li>Nose picking and rubbing</li>\r\n     <li>Tympani flexing</li>\r\n     <li>Coldness to strangers</li>\r\n    </ul>\r\n   </li>\r\n   <li>Habits to pick up:\r\n    <ul>\r\n     <li>Brush teeth everyday</li>\r\n     <li>Clean room every Friday</li>\r\n     <li>Work cardio everyday (eg bike to the city/to a station closer to the city)</li>\r\n     <li>Take every opportunity to improve rapport with well-connected people</li>\r\n     <li>Limit bating to after the weekend</li>\r\n     <li>Document every idea I have</li>\r\n    </ul>\r\n   </li>\r\n   <li>Organise to go out every Friday night.</li>\r\n   <li>Go to webdev/startup meet-ups.</li>\r\n   <li>Wake early, sleep late, work long hours during the week.</li>\r\n   <li>Buy healthy groceries.</li>\r\n  </ul>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Things</span></p>\r\n  <p>Go to a web dev / startup social event. I need likeminded friends.</p>\r\n  <hr/>\r\n  <p>Up and down voting creates the hivemind mentality, because it doesn't express a reason, only a very limited semantic. A richer semantic language could contain impulsive commenting in impulse-rewarding interactive areas.</p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Three week plan</span></p>\r\n  <p>"It's a CMS": Data model (mediatype), Editors, User accounts, Site builder + front page</p>\r\n  <p>Visitor sees sites already built with builder\r\n   <br/>&rarr;Tries it out for themselves\r\n   <br/>&rarr;Looks good, but can't save\r\n   <br/>&rarr;Paypal (credit card?)\r\n   <br/>&rarr;Immediately saveable\r\n  </p>\r\n  <p><b>By June 15</b></p>\r\n  <ul>\r\n   <li>Email Ari about spaces left</li>\r\n   <li>Mediatypes & Editors items written below</li>\r\n  </ul>\r\n  <p><b>By June 22</b></p>\r\n  <ul>\r\n   <li>Email Ari</li>\r\n   <li>User mediatype + editor</li>\r\n   <li>Content differentiation + basic security</li>\r\n   <li>Retain control over account creation, sell accounts by hand</li>\r\n  </ul>\r\n  <p><b>By June 29</b></p>\r\n  <ul>\r\n   <li>Email Ari</li>\r\n   <li>Site mediatype + editor</li>\r\n   <li>Make something with it</li>\r\n   <li>Tetsuya or someone make something with it</li>\r\n  </ul>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">To do</span><time>29 May 2012, 2PM</time></p>\r\n  <p>Available time:</p>\r\n  <ul>\r\n   <li>Tuesday: Meetup 7-9, drinks after; free time 1-6pm, 11pm-1am</li>\r\n   <li>Wednesday: Job search 9-11, meet Tetsuya from 1pm, Yuki + Madoka in evening; free time 12-1pm, 4-6pm, 11pm-1am</li>\r\n   <li>Thursday: Ari @NEIS 10am; be ready to present by the morning\r\n     <br/>&rarr; Total time: 7hr + 5hr = 12hr\r\n   </li>\r\n  </ul>\r\n  <p>To be done:</p>\r\n  <ul>\r\n   <li><b>Business plan</b>\r\n     <br/>Be as clear as possible in my own mind what plan I'm following\r\n     <br/>Find a good model presentation and convert the idea to that format\r\n   </li>\r\n  </ul>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Monetisation plan</span><time>28 May 2012, 2AM</time></p>\r\n  <ol>\r\n   <li>\r\n    <p><b>Basic Mediatype and Editor features</b> (as previously)</p>\r\n   </li>\r\n   <li>\r\n    <p><b>'User' Mediatype and Editor</b></p>\r\n    <ul>\r\n     <li>Basic feature allowing different experience for different people</li>\r\n     <li>After logging in, users will be able to access persistent interactive features such as free blogs and data hosting, subscriptions, and the code base.</li>\r\n     <li>Post-login homepage delivers kotodama message through the site blog</li>\r\n     <li>Users manage paid access, account preferences and identity through home page</li>\r\n     <li>Development begins with primary User, through which all future in-house content will be updated. The first accounts will be issued through this interface, and initial security will be developed with savvy first users as testers</li>\r\n     <li>This stage is ready when: public-facing interface is secure against common griefing; accounts can be requested automatically, but are created by the primary account; users can view any content, but can only edit content created from their account, and; the homepage is a functioning portal to all site features.</li>\r\n    </ul>\r\n   </li>\r\n   <li>\r\n    <p><b>'Site' Mediatype and Editor</b></p>\r\n    <ul>\r\n     <li>Basic feature defining our first product, websites</li>\r\n     <li>Abstract, with a range of customisations which answer customers' specific needs</li>\r\n     <li>Development will start with reference to a high demand site type, and creating sites for friends as first customers. I will create the editing tool and a web designer friend will create the websites, sharing revenue at an agreed rate. Only the primary account will have access to this tool</li>\r\n     <li>The first websites so created will be advertised on our front page as our portfolio. At this point we can start to market this site development service to the broader public</li>\r\n     <li>This stage is ready when: new sites and new types of site can be easily created from a single launch point; our front page and portfolio of sites attracts new customers on it's own merits; automatic account creation is ready to be switched on.</li>\r\n    </ul>\r\n   </li>\r\n   <li>\r\n    <p><b>'Forum' Mediatype and Editor</b></p>\r\n    <ul>\r\n     <li>Special feature encapsulating shared, open-ended activity</li>\r\n     <li>To be developed in progressive abstractions, beginning with commenting. Following this will be community content development in the form of a version control and branch based collaboration system. Lastly Fora will be generalised to any communication game, with messenging and bulletin boards being developed in-house</li>\r\n     <li>Collaboration system is our second product. Editing a project and starting a project will be sold separately.</li>\r\n    </ul>\r\n   </li>\r\n  </ol>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Kotodama to do:</span><time>22 May 2012, 5AM</time></p>\r\n  <ul>\r\n   <li>Implement format identifier in resolver</li>\r\n   <li>Render site entirely from database + delete app/views/media\r\n    <br/>&rarr; Decide on Home mediatype design\r\n   </li>\r\n   <li>Rewrite editor.forms as described elsewhere</li>\r\n   <li>Rewrite routes as /[:context]/[:id] by default</li>\r\n   <li>Align editor menus to header baseline</li>\r\n   <li>Write List.mov javascript</li>\r\n   <li>Replace Array serialisation in models with Hash + code clean up</li>\r\n   <li>Continue from 3rd point on May 3 to do list.</li>\r\n  </ul>\r\n </article>\r\n\r\n <article>\r\n  <p><b>Things to do today:</b></p>\r\n  <p>Resume</p>\r\n  <p>Wash clothes</p>\r\n  <p>Fill out rent certificate</p>\r\n  <p>Take cold medicine</p>\r\n  <p>Invite people for sunday</p>\r\n  <p>Make event for June 6 - what do I need to make it interesting?</p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">First design ideas in weeks!</span><time>May 3, 2012, 4PM</time></p>\r\n  <p>Soon, both mediatypes and editors will be fully functional, so I need to return to what it is exactly I'm building: these features, taken together, amount to <i>humanised data structures</i>.</p>\r\n  <p><b>Things to do:</b></p>\r\n  <ul>\r\n   <li>Access defined data without going through an intermediate accessor: @page.html, not @page.data.html</li>\r\n   <li>Redo both mediatype.script and editor.forms frames as subframesets<br/>&rarr; mediatype.argument = summary, as an html-embedded mediatype</li>\r\n   <li>Add signature info to mediatype summary page, count info to editor page</li>\r\n   <li>Limit mediatype.argument types to those in the database; add basic types to seed</li>\r\n   <li>Rename media model, generate polymorphic has_one associations.</li>\r\n   <li>Write the real url string generator</li>\r\n   <li>Mediatype count nouns?</li>\r\n   <li>Make Blog mediatype!</li>\r\n   <li>Accounts!</li>\r\n  </ul>\r\n  <hr/>\r\n  <p>More ideas:</p>\r\n  <ul>\r\n   <li>Add an upload/download form to Editor, so I can reenter data easily after seeding.</li>\r\n   <li>Do up all the other site-essential mediatypes, if only in form: Frontpage, Account, Image, Discussion, Command, Advertisement.</li>\r\n   <li>Add route for accessing pages through their titles! eg kotoda.ma/?editpage/scraps</li>\r\n   <li>Limit count increment triggers</li>\r\n  </ul>\r\n  <p>Other to do:</p>\r\n  <ul>\r\n   <li>Download rubydocs</li>\r\n  </ul>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">To do on Kotodama:</span></p>\r\n  <ul>\r\n   <li>Editors</li>\r\n   <li>One more "content" mediatype, eg Blog</li>\r\n   <li>Start up a "language exchange in Melbourne" page</li>\r\n   <li>Configs -> production environment</li>\r\n   <li>User mediatype + sanitised inputs</li>\r\n   <li>Buy domain, linode account</li>\r\n  </ul>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">To do:</span></p>\r\n  <ul>\r\n   <li>Visit bank</li>\r\n   <li>Apartment search</li>\r\n   <li>Mobile phone search</li>\r\n   <li>Email Nozao sensei? (Thornbury tomorrow?)</li>\r\n   <li>Haircut</li>\r\n   <li>Cafe &rarr; work on website</li>\r\n   <li>Shopping &rarr; visit centrelink</li>\r\n   <li>Langex evening</li>\r\n  </ul>\r\n  <hr/>\r\n  <p>Dengue Fever (band)</p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Content ideas 4</span></p>\r\n  <ul>\r\n   <li>'for later viewing' bookmarks</li>\r\n  </ul>\r\n  <hr/>\r\n  <p>http://playthismedia.com/class/</p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">To do:</span></p>\r\n  <ul>\r\n   <li>Move mediatype summary pages to home#</li>\r\n   <li>Render instances using mediatype.script (migrate) &rarr; eg subdirs of media# called from here by a mediatype mtype</li>\r\n   <li>Get media working in production environment</li>\r\n   <li>User mediatype</li>\r\n  </ul>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Review</span></p>\r\n  <p>At this point, my code is uglier than hell, and equally buggy, but I've attained the semblance of a second-order CMS. Editors still have to be provided manually, and controller-domain functionality such as view count is broken. Templates are also manual, currently, and the production environment is almost completely non-functional. What I have to show for it is data types and data instances which can be created and altered pretty much the same way, which is what I wanted.</p>\r\n  <p>On second review though, I haven't given any thought to where individual instances are processed before being served. It's all hard-wired at the moment. Shouldn't that be what the Mediatype editor is about, rather than being the summary page? If anything, those pages ought to be hard-wired, or at least more so. Damn. I think I'm going to change that around tomorrow. I should put the generic summary pages in the home view for now; that makes far more sense.</p>\r\n  <p>If I think about it, mediatypes and editors really are unique as site resources, so it does make sense to treat them a little differently. They will play a big part in monetisation later as well, so I should keep them under control for that reason. Returning the ones I've written so far to the MVC system makes sense too, from a simplicity perspective. Only some context regarding both need change from resource to resource, not the whole shebang, and what changes is already something I've designed in detail.</p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Today:</span></p>\r\n  <ul>\r\n   <li>New + create media actions</li>\r\n   <li>Media editor render (sanitise!)</li>\r\n   <li>Move media scripts into database</li>\r\n   <li>Mediatype + Editor object initializer</li>\r\n   <li>Users object &rarr; login/logout</li>\r\n   <li>Chats object..?</li>\r\n  </ul>\r\n  <hr />\r\n  <p><b>Further content ideas:</b></p>\r\n  <ul>\r\n   <li>I need line numbers in my page & mediatype editors!</li>\r\n  </ul>\r\n </article>\r\n\r\n <article>\r\n  <p>Better working habits: how can I get into them? By having something which renews my motivation every day? What might that be? A co-founder? Users?</p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Untitled</span></p>\r\n  <p>Internet access right now is far far too unstable for my needs.</p>\r\n  <p>Impossible to use at the house<br/> &rarr; no ssl at either city library or state library<br/> &rarr; 3 hour limit at melbourne central<br/> &rarr; I'll need to try out my list of wi-fi cafes one at a time to find a location out of home where I can update git/heroku. Ugh!</p>\r\n  <p>Meaning, to do much more work at home I'm going to have to get some completely thorough reference books to download at state library... At least: Rails api (no mongo due to need for ssl download). That's it.</p>\r\n  <p>Getting the mediatype editor working, then making *any* kind of social app is number one priority now. I can at least use this as a pretense to go for coffee with any kind of web developer I can find, to critique the site. And while I'm finding such users, I can test out server code while I interact with a friend over it. kgo</p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Celebrity</span></p>\r\n  <p>Some people would enjoy feeling like a 'local celebrity', among ie friends of friends of friends, just as some would enjoy admiring them as 'local celebrities'. This would be a community mediatype - but in what way?</p>\r\n  <p></p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Content ideas 3</span></p>\r\n  <ul>\r\n   <li>Simple budgeting app</li>\r\n   <li>Scrolling widget - 2 tiered, a la 1hr+ youtube video time scrolling\r\n  </ul>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Trans-border motion</span></p>\r\n  <p>The sharehouse internet connection is out for the second day running, so my need for local copies of reference books is in relief more than usual. I don't have a lot of control over how our head tenant responds to outages, so I'm looking forward to moving somewhere I can better ensure periods like this are minimised. But for now I'll take the an opportunity for some introspection.</p>\r\n  <hr/>\r\n  <p>At this point in my progress from the land of the dead back to the land of the living, the purpose of this page as a blog has started to become relevant. A couple of people know about this page now. Sooner rather than later, I'm going to need to add comments. The function or project of this page has changed too, and I see the draft and live versions becoming more and more independent; I'll probably end up using the draft page as a private diary, and this page as a proper blog, with all the assumptions of interpersonal communication a diary doesn't have.</p>\r\n  <p>My written voice here already feels more external, and more ambitious. Whereas internal monologue has a peculiar shallow depth regardless of the topic, and a seeming inconsequentiality unrelated to its actual gravity, it's as though when voice is externalised, discourse rises up in a display of power in anticipation of a reaction. Not so much here yet, though. (Please excuse the style of this entry, the philosophy book I was just reading seems to have rubbed off a little.)</p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Humble are the headaches of noobs</span></p>\r\n  <p>As it turns out, the metadata system I'd been working on grates with ActiveRecord something hideous. Relational databases mean that each time a user defined a new Mediatype, I would need to put the polymorphic data either within a single column, or a dynamically instantiated table. Rails says, Fuck that, every step of the way. MongoDB however, as far as I can tell, is made for this kind of usage case, so tomorrow I'm going to bundle myself up some mongoid and get hacking. My only concern is how I'm going to hide that from users, ie ensure ActionResource acts seamlessly. Possibly mix RDBS + NoSQL? Cats and dogs living together: 2012 is truly the end times :)</p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Content ideas 2</span></p>\r\n  <ul>\r\n   <li>Chat (by this evening)</li>\r\n   <li>Embeddable to do list</li>\r\n  </ul>\r\n  <hr/>\r\n  <ul>\r\n   <li>Themes</li>\r\n  </ul>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">To not be free</span></p>\r\n  <p>Right now, healthy interest for me is self-interest. Is that true?</p>\r\n  <p>It may be a great asset that I can be interested in anything. It's what drives me to design. However, if I don't submit that endless interest to some kind of personal profit, I won't be able to protect it. As they say: if you're good at something, never do it for free.</p>\r\n  <p>That goes for any activity I participate in. Specifically it's time to start socialising profitably, in the sense of morale profit. It's not by defect of character that I give my attention to others so completely, but neither is it an abuse to capture attention, if through it I can somehow enrich the attentive.</p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Discipline</span></p>\r\n  <p>I have a mixed opinion about my being in voluntary pseudo exile right now. On one hand, I can face my internal weaknesses head-on (though with access to the internet, that's also debatable); on the other, my external weaknesses are exacerbated. It seems I can't say much positive about it.</p>\r\n  <p>Do I have a problem of lack of discipline? </p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Content ideas</span></p>\r\n  <ul>\r\n   <li>An app is a mediatype which is it's own editor. The to-do list I wrote yesterday would be one, if I stored it in a database.</li>\r\n  </ul>\r\n  <p><b>What are some mediatypes I could do with in my life?</b></p>\r\n  <ul>\r\n   <li>Blog</li>\r\n   <li>To do list</li>\r\n   <li>Timer</li>\r\n   <li>Better bookmarking</li>\r\n   <li>"May do" list?</li>\r\n   <li>Feed aggregator</li>\r\n  </ul>\r\n  <p>For the moment, I'm thinking just in terms of simple data processing. Later though, I can consider interactive forms, such as:</p>\r\n  <ul>\r\n   <li>Email</li>\r\n   <li>Discussion! Which might be:\r\n    <ul>\r\n     <li>Mediatype-instance-topical</li>\r\n     <li>Link-topical</li>\r\n     <li>'Just' topical</li>\r\n     <li>A specific communication game</li>\r\n    </ul>\r\n    Which means, discussion would be just a general handle for 'community', and I can plug into it all my rule/flag/mod ideas.\r\n   </li>\r\n   <li>&rArr; Email is a communication game too.</li>\r\n  </ul>\r\n  <p></p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Isn't that interesting? 3</span></p>\r\n  <p>My original motivation to leave the sciences to learn Japanese, you might say came from mischoosing my degree. In retrospect, my contempt for the one website building unit I did sealed off from me this path I've now rearrived at. Then waning interest in molecular biology prompted me to be more promiscuous in looking for a new interest. It might be a common theme in my life: learning truths the hard way, incrementally.</p>\r\n  <p>Even while I was immersing myself in Japanese culture, I was always in it to show someone something interesting. You could even say it was a more honest expression of that desire than when I was among geeks, because I was promoting it among people with no special interest in novelty. However, merely verbal communication wasn't enough in the end. Already two years ago, I conceived of how to unify my desire to instill interest in people with my realisation that the web supports a very powerful communicative discourse due to its generality.</p>\r\n  <hr/>\r\n  <p>The problem with interest, though, is that it's a double-edged sword, amoral. My life right now really is a battle between being motivated to work on kotodama, and sliding into internet addiction. Maybe the pertinent question for me right now, is how to choose healthy interest from moment to moment?</p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Isn't that interesting? 2: Japan</span></p>\r\n  <p>Developing kotodama combines <i>interest</i> with <i>love</i>, something I haven't been able to do since I was a child borrowing math books from the local library. Interest, because I genuinely want to know how to better use the languages I'm coding in. Love, because what I'm working towards is an expression of who I am.</p>\r\n  <p>What was Japan for me? It was interest and love too that kept me learning, but once I had changed myself completely and could pass as Japanese, I realised that it wasn't enough. I had a different calling which I had only postponed. If I had realised that while I was still at Monash, I may not have had to drop out. The topic I wanted to do my honours on was just a way of keeping it within the realm of Japanese studies; but it couldn't hold it. I still love Japan, so what I should do now is develop my career with an eye on the requirements to get a Japanese visa.</p>\r\n </article>\r\n\r\n <article>\r\n  <p><span class="title">Isn't that interesting?</span></p>\r\n  <p>I'm sitting in bed, trying to work out what I need to do now. It's hard to concentrate for fatigue and apathy, but it would be a damn shame to waste the question, so I'm going to talk about my motivation.</p>\r\n  <p>Let's imagine my life is defined by the rhetorical question, "isn't that interesting?" It would motivate me to find novel things to talk about, but its rhetorical aspect would prevent me from empathising with the things.</p>\r\n  <p>(Interruption for sleep at 6AM)</p>\r\n  <hr/>\r\n </article>\r\n\r\n</body>\r\n</html>
\.


--
-- Name: pages_id_seq; Type: SEQUENCE SET; Schema: public; Owner: kotodama
--

SELECT pg_catalog.setval('pages_id_seq', 2, true);


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: public; Owner: kotodama
--

COPY schema_migrations (version) FROM stdin;
20120208154927
20120305215730
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: kotodama
--

COPY users (id, handle, url, created_at, updated_at) FROM stdin;
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: kotodama
--

SELECT pg_catalog.setval('users_id_seq', 1, false);


--
-- Name: apis_pkey; Type: CONSTRAINT; Schema: public; Owner: kotodama; Tablespace: 
--

ALTER TABLE ONLY apis
    ADD CONSTRAINT apis_pkey PRIMARY KEY (id);


--
-- Name: editors_pkey; Type: CONSTRAINT; Schema: public; Owner: kotodama; Tablespace: 
--

ALTER TABLE ONLY editors
    ADD CONSTRAINT editors_pkey PRIMARY KEY (id);


--
-- Name: frontpages_pkey; Type: CONSTRAINT; Schema: public; Owner: kotodama; Tablespace: 
--

ALTER TABLE ONLY frontpages
    ADD CONSTRAINT frontpages_pkey PRIMARY KEY (id);


--
-- Name: media_pkey; Type: CONSTRAINT; Schema: public; Owner: kotodama; Tablespace: 
--

ALTER TABLE ONLY media
    ADD CONSTRAINT media_pkey PRIMARY KEY (id);


--
-- Name: mediatypes_pkey; Type: CONSTRAINT; Schema: public; Owner: kotodama; Tablespace: 
--

ALTER TABLE ONLY mediatypes
    ADD CONSTRAINT mediatypes_pkey PRIMARY KEY (id);


--
-- Name: pages_pkey; Type: CONSTRAINT; Schema: public; Owner: kotodama; Tablespace: 
--

ALTER TABLE ONLY pages
    ADD CONSTRAINT pages_pkey PRIMARY KEY (id);


--
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: kotodama; Tablespace: 
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

